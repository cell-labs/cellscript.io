"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.XPubStore = void 0;

var _extended_key = require("./extended_key");

var _fs = _interopRequireDefault(require("fs"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class XPubStore {
  constructor(accountExtendedPublicKey) {
    this.accountExtendedPublicKey = accountExtendedPublicKey;
  }

  toAccountExtendedPublicKey() {
    return this.accountExtendedPublicKey;
  }

  save(path, {
    overwrite = false
  } = {}) {
    if (!overwrite && _fs.default.existsSync(path)) {
      throw new Error("XPub file already exists!");
    }

    _fs.default.writeFileSync(path, this.toJson());
  }

  toJson() {
    return JSON.stringify({
      xpubkey: this.accountExtendedPublicKey.serialize().slice(2)
    });
  }

  static load(path) {
    const json = _fs.default.readFileSync(path, "utf-8");

    const xpub = JSON.parse(json).xpubkey;

    const accountExtendedPublicKey = _extended_key.AccountExtendedPublicKey.parse("0x" + xpub);

    return new XPubStore(accountExtendedPublicKey);
  }

}

exports.XPubStore = XPubStore;
//# sourceMappingURL=xpub_store.js.map