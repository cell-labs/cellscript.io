{"version":3,"file":"helper.js","names":["assertHexString","utils","assertPublicKey","publicKey","debugPath","length","Error","assertPrivateKey","privateKey","assertChainCode","chainCode"],"sources":["../src/helper.ts"],"sourcesContent":["import { utils, HexString } from \"@ckb-lumos/base\";\nconst { assertHexString } = utils;\n\nexport function assertPublicKey(\n  publicKey: HexString,\n  debugPath?: string\n): void {\n  debugPath = debugPath || \"publicKey\";\n  assertHexString(debugPath, publicKey);\n  if (publicKey.length !== 68) {\n    throw new Error(`publicKey must be length of 33 bytes!`);\n  }\n}\n\nexport function assertPrivateKey(privateKey: HexString): void {\n  assertHexString(\"privateKey\", privateKey);\n  if (privateKey.length !== 66) {\n    throw new Error(`privateKey must be length of 32 bytes!`);\n  }\n}\n\nexport function assertChainCode(chainCode: HexString): void {\n  assertHexString(\"chainCode\", chainCode);\n  if (chainCode.length !== 66) {\n    throw new Error(`chainCode must be length of 32 bytes!`);\n  }\n}\n"],"mappings":";;;;;;;;;AAAA;;AACA,MAAM;EAAEA;AAAF,IAAsBC,WAA5B;;AAEO,SAASC,eAAT,CACLC,SADK,EAELC,SAFK,EAGC;EACNA,SAAS,GAAGA,SAAS,IAAI,WAAzB;EACAJ,eAAe,CAACI,SAAD,EAAYD,SAAZ,CAAf;;EACA,IAAIA,SAAS,CAACE,MAAV,KAAqB,EAAzB,EAA6B;IAC3B,MAAM,IAAIC,KAAJ,CAAW,uCAAX,CAAN;EACD;AACF;;AAEM,SAASC,gBAAT,CAA0BC,UAA1B,EAAuD;EAC5DR,eAAe,CAAC,YAAD,EAAeQ,UAAf,CAAf;;EACA,IAAIA,UAAU,CAACH,MAAX,KAAsB,EAA1B,EAA8B;IAC5B,MAAM,IAAIC,KAAJ,CAAW,wCAAX,CAAN;EACD;AACF;;AAEM,SAASG,eAAT,CAAyBC,SAAzB,EAAqD;EAC1DV,eAAe,CAAC,WAAD,EAAcU,SAAd,CAAf;;EACA,IAAIA,SAAS,CAACL,MAAV,KAAqB,EAAzB,EAA6B;IAC3B,MAAM,IAAIC,KAAJ,CAAW,uCAAX,CAAN;EACD;AACF"}