{"version":3,"file":"keychain.js","names":["ec","EC","EMPTY_BUFFER","Buffer","from","Keychain","privateKey","publicKey","chainCode","index","depth","identifier","fingerprint","parentFingerprint","constructor","isNeutered","privateToPublic","calculateFingerprint","hash160","slice","readUInt32BE","fromSeed","seed","i","crypto","createHmac","update","digest","keychain","fromPublicKey","path","pathComponents","split","length","parseInt","deriveChild","hardened","data","indexBuffer","allocUnsafe","pk","concat","alloc","writeUInt32BE","il","ir","child","publicKeyAdd","privateKeyAdd","derivePath","master","includes","bip32","entries","forEach","c","childIndex","sha256","createHash","factor","result","BN","iadd","cmp","curve","n","isub","toArrayLike","x","toRed","red","y","redSqr","redIMul","redIAdd","b","redSqrt","isOdd","redNeg","point","g","mul","add","encode"],"sources":["../src/keychain.ts"],"sourcesContent":["import crypto from \"crypto\";\nimport { ec as EC } from \"elliptic\";\nimport BN from \"bn.js\";\nimport { privateToPublic } from \"./key\";\n\nconst ec = new EC(\"secp256k1\");\n\nconst EMPTY_BUFFER = Buffer.from(\"\");\n\n// BIP32 Keychain. Not a full implementation.\nexport default class Keychain {\n  privateKey: Buffer = EMPTY_BUFFER;\n  publicKey: Buffer = EMPTY_BUFFER;\n  chainCode: Buffer = EMPTY_BUFFER;\n  index: number = 0;\n  depth: number = 0;\n  identifier: Buffer = EMPTY_BUFFER;\n  fingerprint: number = 0;\n  parentFingerprint: number = 0;\n\n  constructor(privateKey: Buffer, chainCode: Buffer) {\n    this.privateKey = privateKey;\n    this.chainCode = chainCode;\n\n    if (!this.isNeutered()) {\n      this.publicKey = privateToPublic(this.privateKey);\n    }\n  }\n\n  calculateFingerprint(): void {\n    this.identifier = this.hash160(this.publicKey);\n    this.fingerprint = this.identifier.slice(0, 4).readUInt32BE(0);\n  }\n\n  public static fromSeed(seed: Buffer): Keychain {\n    const i = crypto\n      .createHmac(\"sha512\", Buffer.from(\"Bitcoin seed\", \"utf8\"))\n      .update(seed)\n      .digest();\n    const keychain = new Keychain(i.slice(0, 32), i.slice(32));\n    keychain.calculateFingerprint();\n    return keychain;\n  }\n\n  // Create a child keychain with extended public key and path.\n  // Children of this keychain should not have any hardened paths.\n  public static fromPublicKey(\n    publicKey: Buffer,\n    chainCode: Buffer,\n    path: String\n  ): Keychain {\n    const keychain = new Keychain(EMPTY_BUFFER, chainCode);\n    keychain.publicKey = publicKey;\n    keychain.calculateFingerprint();\n\n    const pathComponents = path.split(\"/\");\n    keychain.depth = pathComponents.length - 1;\n    keychain.index = parseInt(pathComponents[pathComponents.length - 1], 10);\n\n    return keychain;\n  }\n\n  public deriveChild(index: number, hardened: boolean): Keychain {\n    let data: Buffer;\n\n    const indexBuffer: Buffer = Buffer.allocUnsafe(4);\n\n    if (hardened) {\n      const pk = Buffer.concat([Buffer.alloc(1, 0), this.privateKey]);\n      indexBuffer.writeUInt32BE(index + 0x80000000, 0);\n      data = Buffer.concat([pk, indexBuffer]);\n    } else {\n      indexBuffer.writeUInt32BE(index, 0);\n      data = Buffer.concat([this.publicKey, indexBuffer]);\n    }\n\n    const i = crypto.createHmac(\"sha512\", this.chainCode).update(data).digest();\n    const il = i.slice(0, 32);\n    const ir = i.slice(32);\n\n    let child: Keychain;\n    if (this.isNeutered()) {\n      child = new Keychain(EMPTY_BUFFER, ir);\n      child.publicKey = Keychain.publicKeyAdd(this.publicKey, il);\n      child.calculateFingerprint();\n    } else {\n      const privateKey = Keychain.privateKeyAdd(this.privateKey, il);\n      child = new Keychain(privateKey, ir);\n      child.calculateFingerprint();\n    }\n\n    child.index = index;\n    child.depth = this.depth + 1;\n    child.parentFingerprint = this.fingerprint;\n\n    return child;\n  }\n\n  public derivePath(path: string): Keychain {\n    const master = [\"m\", `/`, \"\"];\n    if (master.includes(path)) {\n      return this;\n    }\n\n    let bip32: Keychain = this;\n\n    let entries = path.split(\"/\");\n    if (entries[0] === \"m\") {\n      entries = entries.slice(1);\n    }\n    entries.forEach((c) => {\n      const childIndex = parseInt(c, 10);\n      const hardened = c.length > 1 && c[c.length - 1] === \"'\";\n      bip32 = bip32.deriveChild(childIndex, hardened);\n    });\n\n    return bip32;\n  }\n\n  isNeutered(): Boolean {\n    return this.privateKey === EMPTY_BUFFER;\n  }\n\n  hash160(data: Buffer): Buffer {\n    const sha256 = crypto.createHash(\"sha256\").update(data).digest();\n    return crypto.createHash(\"ripemd160\").update(sha256).digest();\n  }\n\n  private static privateKeyAdd(privateKey: Buffer, factor: Buffer): Buffer {\n    const result = new BN(factor);\n    result.iadd(new BN(privateKey));\n    if (result.cmp(ec.curve.n) >= 0) {\n      result.isub(ec.curve.n);\n    }\n\n    return result.toArrayLike(Buffer, \"be\", 32);\n  }\n\n  private static publicKeyAdd(publicKey: Buffer, factor: Buffer): Buffer {\n    const x = new BN(publicKey.slice(1)).toRed(ec.curve.red);\n    let y = x.redSqr().redIMul(x).redIAdd(ec.curve.b).redSqrt();\n    if ((publicKey[0] === 0x03) !== y.isOdd()) {\n      y = y.redNeg();\n    }\n    const point = ec.curve.g.mul(new BN(factor)).add({ x, y });\n    return Buffer.from(point.encode(true, true));\n  }\n}\n"],"mappings":"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"}