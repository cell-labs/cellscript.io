"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TransactionValue = exports.ScriptValue = exports.RawTransactionValue = exports.OutPointValue = void 0;

var _jsXxhash = require("js-xxhash");

var _utils = require("./utils");

var _codec = require("@ckb-lumos/codec");

var blockchain = _interopRequireWildcard(require("./blockchain"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// This module provides a ValueObject implementation for CKB related data
// structures to allow seamless immutable.js integration.
const {
  hexify
} = _codec.bytes;

class Value {
  constructor(buffer) {
    this.buffer = buffer;
  }

  equals(other) {
    return hexify(this.buffer) === hexify(other.buffer);
  }

  hashCode() {
    return (0, _jsXxhash.xxHash32)(Buffer.from(this.buffer), 0);
  }

  hash() {
    return (0, _utils.ckbHash)(this.buffer);
  }

}

class ScriptValue extends Value {
  /**
   * @param script
   * @param _options @deprecated this parameter is unused and takes no effect, please remove it.
   */
  constructor(script, _options = {}) {
    super(blockchain.Script.pack(script));
  }

}

exports.ScriptValue = ScriptValue;

class OutPointValue extends Value {
  /**
   * @param outPoint
   * @param _options @deprecated this parameter is unused and takes no effect, please remove it.
   */
  constructor(outPoint, _options = {}) {
    super(blockchain.OutPoint.pack(outPoint));
  }

}

exports.OutPointValue = OutPointValue;

class RawTransactionValue extends Value {
  /**
   * @param rawTransaction
   * @param _options @deprecated this parameter is unused and takes no effect, please remove it.
   */
  constructor(rawTransaction, _options = {}) {
    super(blockchain.RawTransaction.pack(rawTransaction));
  }

}

exports.RawTransactionValue = RawTransactionValue;

class TransactionValue extends Value {
  /**
   * @param transaction
   * @param _options @deprecated this parameter is unused and takes no effect, please remove it.
   */
  constructor(transaction, _options = {}) {
    super(blockchain.Transaction.pack(transaction));
  }

}

exports.TransactionValue = TransactionValue;
//# sourceMappingURL=values.js.map