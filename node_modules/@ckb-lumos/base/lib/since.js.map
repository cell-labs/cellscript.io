{"version":3,"file":"since.js","names":["parseSince","since","result","parseSinceCompatible","type","value","toBigInt","sinceBI","BI","from","flag","shr","metricFlag","and","eq","length","toNumber","index","number","Error","relative","generateSince","add","v","isBIish","generateHeaderEpoch","_toHex","shl","parseEpoch","epoch","epochBI","maximumAbsoluteEpochSince","args","parsedArgs","map","arg","parseAbsoluteEpochSince","maxNumber","Math","max","maxArgs","filter","i","current","mul","gte","generateAbsoluteEpochSince","validateAbsoluteEpochSince","tipHeaderEpoch","headerEpochParams","lt","lte","validateSince","tipSinceValidationInfo","cellSinceValidationInfo","blockNumber","median_timestamp","sinceHeaderEpoch","added","div","mod","num","toString"],"sources":["../src/since.ts"],"sourcesContent":["import { BIish, BI, isBIish } from \"@ckb-lumos/bi\";\nimport { HexNumber, PackedSince, HexString } from \"./primitive\";\n\nexport type SinceType = \"epochNumber\" | \"blockNumber\" | \"blockTimestamp\";\n\nexport interface EpochSinceValue {\n  length: number;\n  index: number;\n  number: number;\n}\nexport interface SinceValidationInfo {\n  blockNumber: HexNumber;\n  epoch: HexNumber;\n  median_timestamp: HexNumber;\n}\n\n/**\n * Parse since and get relative or not, type, and value of since\n *\n * @param since\n */\nfunction parseSince(since: PackedSince):\n  | {\n      relative: boolean;\n      type: \"epochNumber\";\n      value: EpochSinceValue;\n    }\n  | {\n      relative: boolean;\n      type: \"blockNumber\" | \"blockTimestamp\";\n      value: bigint;\n    } {\n  const result = parseSinceCompatible(since);\n\n  if (result.type === \"epochNumber\") return result;\n  return { ...result, value: result.value.toBigInt() };\n}\n\ntype SinceParseResult =\n  | { relative: boolean; type: \"epochNumber\"; value: EpochSinceValue }\n  | { relative: boolean; type: \"blockNumber\" | \"blockTimestamp\"; value: BI };\n\nfunction parseSinceCompatible(since: PackedSince): SinceParseResult {\n  const sinceBI = BI.from(since);\n  const flag = sinceBI.shr(56);\n  const metricFlag = flag.shr(5).and(\"0b11\");\n  let type: SinceType | undefined;\n  let value: BI | EpochSinceValue;\n  if (metricFlag.eq(0b00)) {\n    type = \"blockNumber\";\n    value = sinceBI.and(\"0xFFFFFFFFFFFFFF\");\n  } else if (metricFlag.eq(0b01)) {\n    type = \"epochNumber\";\n    value = {\n      length: sinceBI.shr(40).and(0xffff).toNumber(),\n      index: sinceBI.shr(24).and(0xffff).toNumber(),\n      number: sinceBI.and(0xffffff).toNumber(),\n    };\n  } else if (metricFlag.eq(0b10)) {\n    type = \"blockTimestamp\";\n    value = sinceBI.and(\"0xFFFFFFFFFFFFFF\");\n  } else {\n    throw new Error(\"Invalid metric flag!\");\n  }\n\n  return {\n    relative: !flag.and(\"0x80\").eq(0),\n    type,\n    value,\n  } as SinceParseResult;\n}\n\nfunction generateSince({\n  relative,\n  type,\n  value,\n}:\n  | {\n      relative: boolean;\n      type: SinceType;\n      value: BIish;\n    }\n  | {\n      relative: boolean;\n      type: \"epochNumber\";\n      value: EpochSinceValue;\n    }): string {\n  let flag = BI.from(0);\n\n  if (relative) {\n    flag = flag.add(0b10000000);\n  }\n\n  if (type === \"epochNumber\") {\n    flag = flag.add(0b00100000);\n  } else if (type === \"blockTimestamp\") {\n    flag = flag.add(0b01000000);\n  }\n\n  let v;\n  if (isBIish(value)) {\n    v = BI.from(value);\n  } else if (typeof value === \"object\") {\n    v = generateHeaderEpoch(value);\n  } else {\n    v = BI.from(value);\n  }\n  return _toHex(flag.shl(56).add(v));\n}\n\n/**\n * parse epoch from blockHeader.epoch\n *\n * @param epoch\n */\nfunction parseEpoch(epoch: BIish): EpochSinceValue {\n  const epochBI = BI.from(epoch);\n  return {\n    length: epochBI.shr(40).and(0xffff).toNumber(),\n    index: epochBI.shr(24).and(0xffff).toNumber(),\n    number: epochBI.and(0xffffff).toNumber(),\n  };\n}\n\n/**\n * return maximum since of args\n *\n * @param args sinces in absolute-epoch-number format\n */\nfunction maximumAbsoluteEpochSince(...args: PackedSince[]): string {\n  const parsedArgs = args.map((arg) => parseAbsoluteEpochSince(arg));\n  const maxNumber = Math.max(...parsedArgs.map((arg) => arg.number));\n  const maxArgs = parsedArgs.filter((arg) => arg.number === maxNumber);\n  let max = maxArgs[0];\n\n  for (let i = 1; i < maxArgs.length; ++i) {\n    const current = maxArgs[i];\n    if (\n      BI.from(current.index)\n        .mul(max.length)\n        .gte(BI.from(max.index).mul(current.length))\n    ) {\n      max = current;\n    }\n  }\n\n  return generateAbsoluteEpochSince(max);\n}\n\n/**\n * generate absolute-epoch-number format since\n *\n * @param params\n */\nfunction generateAbsoluteEpochSince({\n  length,\n  index,\n  number,\n}: EpochSinceValue): PackedSince {\n  return generateSince({\n    relative: false,\n    type: \"epochNumber\",\n    value: { length, index, number },\n  });\n}\n\n/**\n * generate header epoch from epoch since value\n *\n * @param params\n */\nfunction generateHeaderEpoch({\n  length,\n  index,\n  number,\n}: EpochSinceValue): HexString {\n  return _toHex(\n    BI.from(length).shl(40).add(BI.from(index).shl(24)).add(number)\n  );\n}\n\n/**\n * Will throw an error if since not in absolute-epoch-number format\n *\n * @param since\n */\nfunction parseAbsoluteEpochSince(since: PackedSince): EpochSinceValue {\n  const { relative, type, value } = parseSinceCompatible(since);\n\n  if (!(relative === false && type === \"epochNumber\")) {\n    throw new Error(\"Since format error!\");\n  }\n\n  return value as EpochSinceValue;\n}\n\n/**\n * Will throw an error if since not in absolute-epoch-number format\n *\n * @param since\n * @param tipHeaderEpoch\n */\nfunction validateAbsoluteEpochSince(\n  since: PackedSince,\n  tipHeaderEpoch: HexString\n): boolean {\n  const value = parseSinceCompatible(since).value as EpochSinceValue;\n  const headerEpochParams = parseEpoch(tipHeaderEpoch);\n  return (\n    BI.from(value.number).lt(headerEpochParams.number) ||\n    (BI.from(value.number).eq(headerEpochParams.number) &&\n      BI.from(value.index)\n        .mul(headerEpochParams.length)\n        .lte(BI.from(headerEpochParams.index).mul(value.length)))\n  );\n}\n\n/**\n * Compare since with tipHeader, check since is valid or not.\n *\n * @param since\n * @param tipHeader\n * @param sinceHeader can left empty if absolute since\n */\nfunction validateSince(\n  since: PackedSince,\n  tipSinceValidationInfo: SinceValidationInfo,\n  cellSinceValidationInfo: SinceValidationInfo\n): boolean {\n  const { relative, type, value } = parseSinceCompatible(since);\n\n  if (!relative) {\n    if (type === \"epochNumber\") {\n      return validateAbsoluteEpochSince(since, tipSinceValidationInfo.epoch);\n    }\n\n    if (type === \"blockNumber\") {\n      return BI.from(value).lte(tipSinceValidationInfo.blockNumber);\n    }\n\n    if (type === \"blockTimestamp\") {\n      if (!tipSinceValidationInfo.median_timestamp) {\n        throw new Error(`Must provide tip median_timestamp!`);\n      }\n      return BI.from(value)\n        .mul(1000)\n        .lte(tipSinceValidationInfo.median_timestamp);\n    }\n  } else {\n    if (type === \"epochNumber\") {\n      const tipHeaderEpoch = parseEpoch(tipSinceValidationInfo.epoch);\n      const sinceHeaderEpoch = parseEpoch(cellSinceValidationInfo.epoch);\n      const added: Record<keyof EpochSinceValue, BI> = {\n        number: BI.from((value as EpochSinceValue).number).add(\n          sinceHeaderEpoch.number\n        ),\n        index: BI.from((value as EpochSinceValue).index)\n          .mul(sinceHeaderEpoch.length)\n          .add(\n            BI.from(sinceHeaderEpoch.index).mul(\n              (value as EpochSinceValue).length\n            )\n          ),\n        length: BI.from((value as EpochSinceValue).length).mul(\n          sinceHeaderEpoch.length\n        ),\n      };\n\n      if (\n        (value as EpochSinceValue).length === 0 &&\n        sinceHeaderEpoch.length !== 0\n      ) {\n        added.index = BI.from(sinceHeaderEpoch.index);\n        added.length = BI.from(sinceHeaderEpoch.length);\n      } else if (\n        sinceHeaderEpoch.length === 0 &&\n        (value as EpochSinceValue).length !== 0\n      ) {\n        added.index = BI.from((value as EpochSinceValue).index);\n        added.length = BI.from((value as EpochSinceValue).length);\n      }\n\n      if (\n        !BI.from(added.length).eq(0) &&\n        BI.from(added.index).gte(added.length)\n      ) {\n        added.number = added.index.div(added.length).add(added.number);\n        added.index = added.index.mod(added.length);\n      }\n\n      return (\n        BI.from(added.number).lt(tipHeaderEpoch.number) ||\n        (BI.from(added.number).eq(tipHeaderEpoch.number) &&\n          BI.from(added.index)\n            .mul(tipHeaderEpoch.length)\n            .lte(BI.from(tipHeaderEpoch.index).mul(added.length)))\n      );\n    }\n\n    if (type === \"blockNumber\") {\n      return BI.from(value)\n        .add(cellSinceValidationInfo.blockNumber)\n        .lte(tipSinceValidationInfo.blockNumber);\n    }\n\n    if (type === \"blockTimestamp\") {\n      if (\n        !tipSinceValidationInfo.median_timestamp ||\n        !cellSinceValidationInfo.median_timestamp\n      ) {\n        throw new Error(`Must provide median_timestamp!`);\n      }\n      return BI.from(value)\n        .mul(1000)\n        .add(cellSinceValidationInfo.median_timestamp)\n        .lte(tipSinceValidationInfo.median_timestamp);\n    }\n  }\n\n  return false;\n}\n\nfunction _toHex(num: number | BI) {\n  return \"0x\" + num.toString(16);\n}\n\nexport {\n  parseSince,\n  parseSinceCompatible,\n  parseEpoch,\n  maximumAbsoluteEpochSince,\n  generateAbsoluteEpochSince,\n  parseAbsoluteEpochSince,\n  validateAbsoluteEpochSince,\n  validateSince,\n  generateSince,\n  generateHeaderEpoch,\n};\n"],"mappings":"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"}