{"version":3,"file":"blockchain.js","names":["Uint128LE","Uint8","Uint32LE","Uint64LE","number","byteVecOf","option","table","vector","struct","molecule","bytify","hexify","bytes","createFixedHexBytesCodec","byteLength","createFixedBytesCodec","pack","hex","unpack","buf","Bytes","BytesOpt","BytesVec","Byte32","Byte32Vec","WitnessArgsOf","payload","lock","inputType","outputType","HexifyCodec","createBytesCodec","WitnessArgs","HashType","type","Error","hashTypeBuf","DepType","depTypeBuf","Script","codeHash","hashType","args","ScriptOpt","OutPoint","txHash","index","CellInput","since","previousOutput","CellInputVec","CellOutput","capacity","CellOutputVec","CellDep","outPoint","depType","CellDepVec","RawTransaction","version","cellDeps","headerDeps","inputs","outputs","outputsData","BaseTransaction","raw","witnesses","Transaction","tx","transformTransactionCodecType","deTransformTransactionCodecType","TransactionVec","RawHeader","compactTarget","timestamp","epoch","parentHash","transactionsRoot","proposalsHash","extraHash","dao","BaseHeader","nonce","Header","header","transformHeaderCodecType","deTransformHeaderCodecType","ProposalShortId","ProposalShortIdVec","UncleBlock","proposals","UncleBlockVec","Block","uncles","transactions","BlockV1","extension","CellbaseWitness","message","data","map","cellDep","BI","from","toHexString","input","output","Number","hash"],"sources":["../src/blockchain.ts"],"sourcesContent":["import {\n  AnyCodec,\n  BytesLike,\n  createBytesCodec,\n  createFixedBytesCodec,\n  PackParam,\n  UnpackResult,\n  number,\n  molecule,\n  bytes,\n} from \"@ckb-lumos/codec\";\nimport { BytesCodec, FixedBytesCodec } from \"@ckb-lumos/codec/lib/base\";\n\nimport type * as api from \"./api\";\nimport { BI } from \"@ckb-lumos/bi\";\n\nconst { Uint128LE, Uint8, Uint32LE, Uint64LE } = number;\nconst { byteVecOf, option, table, vector, struct } = molecule;\nconst { bytify, hexify } = bytes;\n\ntype TransactionCodecType = PackParam<typeof BaseTransaction>;\ntype TransactionUnpackResultType = UnpackResult<typeof BaseTransaction>;\ntype HeaderCodecType = PackParam<typeof BaseHeader>;\ntype HeaderUnpackResultType = UnpackResult<typeof BaseHeader>;\n\nexport function createFixedHexBytesCodec(\n  byteLength: number\n): FixedBytesCodec<string, BytesLike> {\n  return createFixedBytesCodec({\n    byteLength,\n    pack: (hex) => bytify(hex),\n    unpack: (buf) => hexify(buf),\n  });\n}\n\n/**\n * placeholder codec, generally used as a placeholder\n * ```\n * // for example, when some BytesOpt is not used, it will be filled with this codec\n * // option BytesOpt (Bytes);\n * const UnusedBytesOpt = UnknownOpt\n * ```\n */\n// export const UnusedOpt = option(Unknown);\n\n// vector Bytes <byte>\nexport const Bytes = byteVecOf({ pack: bytify, unpack: hexify });\n\nexport const BytesOpt = option(Bytes);\nexport const BytesVec = vector(Bytes);\nexport const Byte32 = createFixedHexBytesCodec(32);\nexport const Byte32Vec = vector(Byte32);\n\nexport function WitnessArgsOf<\n  LockCodec extends AnyCodec,\n  InputTypeCodec extends AnyCodec,\n  OutputTypeCodec extends AnyCodec\n>(payload: {\n  lock: LockCodec;\n  inputType: InputTypeCodec;\n  outputType: OutputTypeCodec;\n}): BytesCodec<\n  {\n    lock?: UnpackResult<LockCodec>;\n    inputType?: UnpackResult<InputTypeCodec>;\n    outputType?: UnpackResult<OutputTypeCodec>;\n  },\n  {\n    lock?: PackParam<LockCodec>;\n    inputType?: PackParam<InputTypeCodec>;\n    outputType?: PackParam<OutputTypeCodec>;\n  }\n> {\n  return table(\n    {\n      lock: option(byteVecOf(payload.lock)),\n      inputType: option(byteVecOf(payload.inputType)),\n      outputType: option(byteVecOf(payload.outputType)),\n    },\n    [\"lock\", \"inputType\", \"outputType\"]\n  );\n}\n\nconst HexifyCodec = createBytesCodec<string, BytesLike>({\n  pack: bytify,\n  unpack: hexify,\n});\n\n/**\n *\n * @example\n * ```ts\n * // secp256k1 lock witness\n * WitnessArgs.pack({ lock: '0x' + '00'.repeat(65) })\n * ```\n */\nexport const WitnessArgs = WitnessArgsOf({\n  lock: HexifyCodec,\n  inputType: HexifyCodec,\n  outputType: HexifyCodec,\n});\n\n/**\n * Implementation of blockchain.mol\n * https://github.com/nervosnetwork/ckb/blob/5a7efe7a0b720de79ff3761dc6e8424b8d5b22ea/util/types/schemas/blockchain.mol\n */\nexport const HashType = createFixedBytesCodec<api.HashType>({\n  byteLength: 1,\n  pack: (type) => {\n    if (type === \"data\") return Uint8.pack(0);\n    if (type === \"type\") return Uint8.pack(1);\n    if (type === \"data1\") return Uint8.pack(2);\n    throw new Error(`Invalid hash type: ${type}`);\n  },\n  unpack: (buf) => {\n    const hashTypeBuf = Uint8.unpack(buf);\n    if (hashTypeBuf === 0) return \"data\";\n    if (hashTypeBuf === 1) return \"type\";\n    if (hashTypeBuf === 2) return \"data1\";\n    throw new Error(`Invalid hash type: ${hashTypeBuf}`);\n  },\n});\n\nexport const DepType = createFixedBytesCodec<api.DepType>({\n  byteLength: 1,\n  pack: (type) => {\n    if (type === \"code\") return Uint8.pack(0);\n    if (type === \"depGroup\") return Uint8.pack(1);\n    throw new Error(`Invalid dep type: ${type}`);\n  },\n  unpack: (buf) => {\n    const depTypeBuf = Uint8.unpack(buf);\n    if (depTypeBuf === 0) return \"code\";\n    if (depTypeBuf === 1) return \"depGroup\";\n    throw new Error(`Invalid dep type: ${depTypeBuf}`);\n  },\n});\n\nexport const Script = table(\n  {\n    codeHash: Byte32,\n    hashType: HashType,\n    args: Bytes,\n  },\n  [\"codeHash\", \"hashType\", \"args\"]\n);\n\nexport const ScriptOpt = option(Script);\n\nexport const OutPoint = struct(\n  {\n    txHash: Byte32,\n    index: Uint32LE,\n  },\n  [\"txHash\", \"index\"]\n);\n\nexport const CellInput = struct(\n  {\n    since: Uint64LE,\n    previousOutput: OutPoint,\n  },\n  [\"since\", \"previousOutput\"]\n);\n\nexport const CellInputVec = vector(CellInput);\n\nexport const CellOutput = table(\n  {\n    capacity: Uint64LE,\n    lock: Script,\n    type: ScriptOpt,\n  },\n  [\"capacity\", \"lock\", \"type\"]\n);\n\nexport const CellOutputVec = vector(CellOutput);\n\nexport const CellDep = struct(\n  {\n    outPoint: OutPoint,\n    depType: DepType,\n  },\n  [\"outPoint\", \"depType\"]\n);\n\nexport const CellDepVec = vector(CellDep);\n\nexport const RawTransaction = table(\n  {\n    version: Uint32LE,\n    cellDeps: CellDepVec,\n    headerDeps: Byte32Vec,\n    inputs: CellInputVec,\n    outputs: CellOutputVec,\n    outputsData: BytesVec,\n  },\n  [\"version\", \"cellDeps\", \"headerDeps\", \"inputs\", \"outputs\", \"outputsData\"]\n);\n\nconst BaseTransaction = table(\n  {\n    raw: RawTransaction,\n    witnesses: BytesVec,\n  },\n  [\"raw\", \"witnesses\"]\n);\n\nexport const Transaction = createBytesCodec({\n  pack: (tx: api.Transaction) =>\n    BaseTransaction.pack(transformTransactionCodecType(tx)),\n  unpack: (buf) => deTransformTransactionCodecType(BaseTransaction.unpack(buf)),\n});\n\nexport const TransactionVec = vector(Transaction);\n\nexport const RawHeader = struct(\n  {\n    version: Uint32LE,\n    compactTarget: Uint32LE,\n    timestamp: Uint64LE,\n    number: Uint64LE,\n    epoch: Uint64LE,\n    parentHash: Byte32,\n    transactionsRoot: Byte32,\n    proposalsHash: Byte32,\n    extraHash: Byte32,\n    dao: Byte32,\n  },\n  [\n    \"version\",\n    \"compactTarget\",\n    \"timestamp\",\n    \"number\",\n    \"epoch\",\n    \"parentHash\",\n    \"transactionsRoot\",\n    \"proposalsHash\",\n    \"extraHash\",\n    \"dao\",\n  ]\n);\n\nexport const BaseHeader = struct(\n  {\n    raw: RawHeader,\n    nonce: Uint128LE,\n  },\n  [\"raw\", \"nonce\"]\n);\n\nexport const Header = createBytesCodec({\n  pack: (header: api.Header) =>\n    BaseHeader.pack(transformHeaderCodecType(header)),\n  unpack: (buf) => deTransformHeaderCodecType(BaseHeader.unpack(buf)),\n});\n\nexport const ProposalShortId = createFixedHexBytesCodec(10);\n\nexport const ProposalShortIdVec = vector(ProposalShortId);\n\nexport const UncleBlock = table(\n  {\n    header: Header,\n    proposals: ProposalShortIdVec,\n  },\n  [\"header\", \"proposals\"]\n);\n\nexport const UncleBlockVec = vector(UncleBlock);\n\nexport const Block = table(\n  {\n    header: Header,\n    uncles: UncleBlockVec,\n    transactions: TransactionVec,\n    proposals: ProposalShortIdVec,\n  },\n  [\"header\", \"uncles\", \"transactions\", \"proposals\"]\n);\n\nexport const BlockV1 = table(\n  {\n    header: Header,\n    uncles: UncleBlockVec,\n    transactions: TransactionVec,\n    proposals: ProposalShortIdVec,\n    extension: Bytes,\n  },\n  [\"header\", \"uncles\", \"transactions\", \"proposals\", \"extension\"]\n);\n\nexport const CellbaseWitness = table(\n  {\n    lock: Script,\n    message: Bytes,\n  },\n  [\"lock\", \"message\"]\n);\n\n// TODO make an enhancer for number codecs\n/**\n * from Transantion defined in  @ckb-lumos/base/lib/api.d.ts\n * ```\n * export interface Transaction {\n *  cellDeps: CellDep[];\n *  hash?: Hash;\n *  headerDeps: Hash[];\n *  inputs: Input[];\n *  outputs: Output[];\n *  outputsData: HexString[];\n *  version: HexNumber;\n *  witnesses: HexString[];\n *}\n * to :\n * interface TransactionCodecType {\n *   raw: {\n *     version: Uint32LE;\n *     cellDeps: DeCellDepVec;\n *     headerDeps: Byte32Vec;\n *     inputs: CellInputVec;\n *     outputs: CellOutputVec;\n *     outputsData: BytesVec;\n *   };\n *   witnesses: BytesVec;\n * }\n * ```\n * @param data Transantion defined in @ckb-lumos/base/lib/api.d.ts\n * @returns TransactionCodecType\n */\nexport function transformTransactionCodecType(\n  data: api.Transaction\n): TransactionCodecType {\n  return {\n    raw: {\n      version: data.version,\n      cellDeps: data.cellDeps,\n      headerDeps: data.headerDeps,\n      inputs: data.inputs,\n      outputs: data.outputs,\n      outputsData: data.outputsData,\n    },\n    witnesses: data.witnesses,\n  };\n}\n\nexport function deTransformTransactionCodecType(\n  data: TransactionUnpackResultType\n): api.Transaction {\n  return {\n    cellDeps: data.raw.cellDeps.map((cellDep) => {\n      return {\n        outPoint: {\n          txHash: cellDep.outPoint.txHash,\n          index: BI.from(cellDep.outPoint.index).toHexString(),\n        },\n        depType: cellDep.depType,\n      };\n    }),\n    headerDeps: data.raw.headerDeps,\n    inputs: data.raw.inputs.map((input) => {\n      return {\n        previousOutput: {\n          txHash: input.previousOutput.txHash,\n          index: BI.from(input.previousOutput.index).toHexString(),\n        },\n        since: input.since.toHexString(),\n      };\n    }),\n    outputs: data.raw.outputs.map((output) => {\n      return {\n        capacity: output.capacity.toHexString(),\n        lock: output.lock,\n        type: output.type,\n      };\n    }),\n    outputsData: data.raw.outputsData,\n    version: BI.from(data.raw.version).toHexString(),\n    witnesses: data.witnesses,\n  };\n}\n\nexport function transformHeaderCodecType(data: api.Header): HeaderCodecType {\n  return {\n    raw: {\n      timestamp: data.timestamp,\n      number: data.number,\n      epoch: data.epoch,\n      compactTarget: Number(data.compactTarget),\n      dao: data.dao,\n      parentHash: data.parentHash,\n      proposalsHash: data.proposalsHash,\n      transactionsRoot: data.transactionsRoot,\n      extraHash: data.extraHash,\n      version: data.version,\n    },\n    nonce: data.nonce,\n  };\n}\n\nexport function deTransformHeaderCodecType(\n  data: HeaderUnpackResultType\n): api.Header {\n  return {\n    timestamp: data.raw.timestamp.toHexString(),\n    number: data.raw.number.toHexString(),\n    epoch: data.raw.epoch.toHexString(),\n    compactTarget: BI.from(data.raw.compactTarget).toHexString(),\n    dao: data.raw.dao,\n    parentHash: data.raw.parentHash,\n    proposalsHash: data.raw.proposalsHash,\n    transactionsRoot: data.raw.transactionsRoot,\n    extraHash: data.raw.extraHash,\n    version: BI.from(data.raw.version).toHexString(),\n    nonce: data.nonce.toHexString(),\n    hash: \"\",\n  };\n}\n"],"mappings":"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"}