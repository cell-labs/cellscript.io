{"version":3,"file":"utils.js","names":["hexToByteArray","h","test","Error","startsWith","slice","array","length","push","parseInt","byteArrayToHex","a","map","i","toString","join"],"sources":["../src/utils.ts"],"sourcesContent":["import { HexString } from \"@ckb-lumos/base\";\n\nexport function hexToByteArray(h: HexString): number[] {\n  if (!/^(0x)?([0-9a-fA-F][0-9a-fA-F])*$/.test(h)) {\n    throw new Error(\"Invalid hex string!\");\n  }\n  if (h.startsWith(\"0x\")) {\n    h = h.slice(2);\n  }\n  const array = [];\n  while (h.length >= 2) {\n    array.push(parseInt(h.slice(0, 2), 16));\n    h = h.slice(2);\n  }\n  return array;\n}\n\nexport function byteArrayToHex(a: number[]): HexString {\n  return \"0x\" + a.map((i) => (\"00\" + i.toString(16)).slice(-2)).join(\"\");\n}\n"],"mappings":";;;;;;;;AAEO,SAASA,cAAT,CAAwBC,CAAxB,EAAgD;EACrD,IAAI,CAAC,mCAAmCC,IAAnC,CAAwCD,CAAxC,CAAL,EAAiD;IAC/C,MAAM,IAAIE,KAAJ,CAAU,qBAAV,CAAN;EACD;;EACD,IAAIF,CAAC,CAACG,UAAF,CAAa,IAAb,CAAJ,EAAwB;IACtBH,CAAC,GAAGA,CAAC,CAACI,KAAF,CAAQ,CAAR,CAAJ;EACD;;EACD,MAAMC,KAAK,GAAG,EAAd;;EACA,OAAOL,CAAC,CAACM,MAAF,IAAY,CAAnB,EAAsB;IACpBD,KAAK,CAACE,IAAN,CAAWC,QAAQ,CAACR,CAAC,CAACI,KAAF,CAAQ,CAAR,EAAW,CAAX,CAAD,EAAgB,EAAhB,CAAnB;IACAJ,CAAC,GAAGA,CAAC,CAACI,KAAF,CAAQ,CAAR,CAAJ;EACD;;EACD,OAAOC,KAAP;AACD;;AAEM,SAASI,cAAT,CAAwBC,CAAxB,EAAgD;EACrD,OAAO,OAAOA,CAAC,CAACC,GAAF,CAAOC,CAAD,IAAO,CAAC,OAAOA,CAAC,CAACC,QAAF,CAAW,EAAX,CAAR,EAAwBT,KAAxB,CAA8B,CAAC,CAA/B,CAAb,EAAgDU,IAAhD,CAAqD,EAArD,CAAd;AACD"}