{"version":3,"file":"normalizers.js","names":["normalizeHexNumber","length","debugPath","value","ArrayBuffer","intValue","JSBI","BigInt","toString","Error","view","DataView","i","start","setUint8","parseInt","substr","buffer","byteLength","array","Uint8Array","set","normalizeRawData","Reader","toArrayBuffer","normalizeObject","object","keys","result","key","f","Object","entries","NormalizeScript","script","codeHash","hashType","args","NormalizeOutPoint","outPoint","txHash","index","toNormalize","normalize","NormalizeCellInput","cellInput","since","previousOutput","NormalizeCellOutput","cellOutput","capacity","lock","type","type_","NormalizeCellDep","cellDep","depType","toNormalizeArray","normalizeFunction","map","item","NormalizeRawTransaction","rawTransaction","version","cellDeps","headerDeps","inputs","outputs","outputsData","NormalizeTransaction","transaction","witnesses","raw","NormalizeRawHeader","rawHeader","compactTarget","timestamp","number","epoch","parentHash","transactionsRoot","proposalsHash","extraHash","dao","NormalizeHeader","header","nonce","NormalizeUncleBlock","uncleBlock","proposals","NormalizeBlock","block","uncles","transactions","NormalizeCellbaseWitness","cellbaseWitness","message","NormalizeWitnessArgs","witnessArgs","inputType","outputType"],"sources":["../src/normalizers.js"],"sourcesContent":["// This package provides normalizer functions. Even though CKB uses molecule\n// as the serialization layer. There is still CKB specific knowledge that does\n// not belong in molecule. For example, all numbers in CKB protocols are\n// serialized using little endian format. This package tries to encode such\n// knowledge. The goal here, is that you are free to use whatever types that\n// makes most sense to represent the values. As long as you pass your object\n// through the normalizers here, molecule should be able to serialize the values\n// into correct formats required by CKB.\n//\n// Note this is only used when you need to deal with CKB structures in molecule\n// format. If you are using RPCs or GraphQL to interact with CKB, chances are you\n// will not need this package.\nimport JSBI from \"jsbi\";\nimport { Reader } from \"./reader\";\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nfunction normalizeHexNumber(length) {\n  return function (debugPath, value) {\n    if (!(value instanceof ArrayBuffer)) {\n      let intValue = JSBI.BigInt(value).toString(16);\n      if (intValue.length % 2 !== 0) {\n        intValue = \"0\" + intValue;\n      }\n      if (intValue.length / 2 > length) {\n        throw new Error(\n          `${debugPath} is ${\n            intValue.length / 2\n          } bytes long, expected length is ${length}!`\n        );\n      }\n      const view = new DataView(new ArrayBuffer(length));\n      for (let i = 0; i < intValue.length / 2; i++) {\n        const start = intValue.length - (i + 1) * 2;\n        view.setUint8(i, parseInt(intValue.substr(start, 2), 16));\n      }\n      value = view.buffer;\n    }\n    if (value.byteLength < length) {\n      const array = new Uint8Array(length);\n      array.set(new Uint8Array(value), 0);\n      value = array.buffer;\n    }\n    return value;\n  };\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nfunction normalizeRawData(length) {\n  return function (debugPath, value) {\n    value = new Reader(value).toArrayBuffer();\n    if (length > 0 && value.byteLength !== length) {\n      throw new Error(\n        `${debugPath} has invalid length ${value.byteLength}, required: ${length}`\n      );\n    }\n    return value;\n  };\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nfunction normalizeObject(debugPath, object, keys) {\n  const result = {};\n\n  for (const [key, f] of Object.entries(keys)) {\n    const value = object[key];\n    if (!value) {\n      throw new Error(`${debugPath} is missing ${key}!`);\n    }\n    result[key] = f(`${debugPath}.${key}`, value);\n  }\n  return result;\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeScript(script, { debugPath = \"script\" } = {}) {\n  return normalizeObject(debugPath, script, {\n    codeHash: normalizeRawData(32),\n    hashType: function (debugPath, value) {\n      switch (value) {\n        case \"data\":\n          return 0;\n        case \"type\":\n          return 1;\n        case \"data1\":\n          return 2;\n        case 0:\n          return value;\n        case 1:\n          return value;\n        case 2:\n          return value;\n        default:\n          throw new Error(`${debugPath}.hashType has invalid value: ${value}`);\n      }\n    },\n    args: normalizeRawData(-1),\n  });\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeOutPoint(outPoint, { debugPath = \"outPoint\" } = {}) {\n  return normalizeObject(debugPath, outPoint, {\n    txHash: normalizeRawData(32),\n    index: normalizeHexNumber(4),\n  });\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nfunction toNormalize(normalize) {\n  return function (debugPath, value) {\n    return normalize(value, {\n      debugPath,\n    });\n  };\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeCellInput(\n  cellInput,\n  { debugPath = \"cell_input\" } = {}\n) {\n  return normalizeObject(debugPath, cellInput, {\n    since: normalizeHexNumber(8),\n    previousOutput: toNormalize(NormalizeOutPoint),\n  });\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeCellOutput(\n  cellOutput,\n  { debugPath = \"cellOutput\" } = {}\n) {\n  const result = normalizeObject(debugPath, cellOutput, {\n    capacity: normalizeHexNumber(8),\n    lock: toNormalize(NormalizeScript),\n  });\n  if (cellOutput.type) {\n    result.type_ = NormalizeScript(cellOutput.type, {\n      debugPath: `${debugPath}.type`,\n    });\n  }\n  return result;\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeCellDep(cellDep, { debugPath = \"cell_dep\" } = {}) {\n  return normalizeObject(debugPath, cellDep, {\n    outPoint: toNormalize(NormalizeOutPoint),\n    depType: function (debugPath, value) {\n      switch (value) {\n        case \"code\":\n          return 0;\n        case \"depGroup\":\n          return 1;\n        case 0:\n          return value;\n        case 1:\n          return value;\n        default:\n          throw new Error(`${debugPath}.depType has invalid value: ${value}`);\n      }\n    },\n  });\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nfunction toNormalizeArray(normalizeFunction) {\n  return function (debugPath, array) {\n    return array.map((item, i) => {\n      return normalizeFunction(`${debugPath}[${i}]`, item);\n    });\n  };\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeRawTransaction(\n  rawTransaction,\n  { debugPath = \"raw_transaction\" } = {}\n) {\n  return normalizeObject(debugPath, rawTransaction, {\n    version: normalizeHexNumber(4),\n    cellDeps: toNormalizeArray(toNormalize(NormalizeCellDep)),\n    headerDeps: toNormalizeArray(normalizeRawData(32)),\n    inputs: toNormalizeArray(toNormalize(NormalizeCellInput)),\n    outputs: toNormalizeArray(toNormalize(NormalizeCellOutput)),\n    outputsData: toNormalizeArray(normalizeRawData(-1)),\n  });\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeTransaction(\n  transaction,\n  { debugPath = \"transaction\" } = {}\n) {\n  const rawTransaction = NormalizeRawTransaction(transaction, {\n    debugPath: `(raw)${debugPath}`,\n  });\n  const result = normalizeObject(debugPath, transaction, {\n    witnesses: toNormalizeArray(normalizeRawData(-1)),\n  });\n  result.raw = rawTransaction;\n  return result;\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeRawHeader(\n  rawHeader,\n  { debugPath = \"raw_header\" } = {}\n) {\n  return normalizeObject(debugPath, rawHeader, {\n    version: normalizeHexNumber(4),\n    compactTarget: normalizeHexNumber(4),\n    timestamp: normalizeHexNumber(8),\n    number: normalizeHexNumber(8),\n    epoch: normalizeHexNumber(8),\n    parentHash: normalizeRawData(32),\n    transactionsRoot: normalizeRawData(32),\n    proposalsHash: normalizeRawData(32),\n    extraHash: normalizeRawData(32),\n    dao: normalizeRawData(32),\n  });\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeHeader(header, { debugPath = \"header\" } = {}) {\n  const rawHeader = NormalizeRawHeader(header, {\n    debugPath: `(raw)${debugPath}`,\n  });\n  const result = normalizeObject(debugPath, header, {\n    nonce: normalizeHexNumber(16),\n  });\n  result.raw = rawHeader;\n  return result;\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeUncleBlock(\n  uncleBlock,\n  { debugPath = \"uncle_block\" } = {}\n) {\n  return normalizeObject(debugPath, uncleBlock, {\n    header: toNormalize(NormalizeHeader),\n    proposals: toNormalizeArray(normalizeRawData(10)),\n  });\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeBlock(block, { debugPath = \"block\" } = {}) {\n  return normalizeObject(debugPath, block, {\n    header: toNormalize(NormalizeHeader),\n    uncles: toNormalizeArray(toNormalize(NormalizeUncleBlock)),\n    transactions: toNormalizeArray(toNormalize(NormalizeTransaction)),\n    proposals: toNormalizeArray(normalizeRawData(10)),\n  });\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeCellbaseWitness(\n  cellbaseWitness,\n  { debugPath = \"cellbase_witness\" } = {}\n) {\n  return normalizeObject(debugPath, cellbaseWitness, {\n    lock: toNormalize(NormalizeScript),\n    message: normalizeRawData(-1),\n  });\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeWitnessArgs(\n  witnessArgs,\n  { debugPath = \"witness_args\" } = {}\n) {\n  const result = {};\n  if (witnessArgs.lock) {\n    result.lock = normalizeRawData(-1)(`${debugPath}.lock`, witnessArgs.lock);\n  }\n  if (witnessArgs.inputType) {\n    result.inputType = normalizeRawData(-1)(\n      `${debugPath}.inputType`,\n      witnessArgs.inputType\n    );\n  }\n  if (witnessArgs.outputType) {\n    result.outputType = normalizeRawData(-1)(\n      `${debugPath}.outputType`,\n      witnessArgs.outputType\n    );\n  }\n  return result;\n}\n"],"mappings":"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"}