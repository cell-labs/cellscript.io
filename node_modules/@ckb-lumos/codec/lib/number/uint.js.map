{"version":3,"file":"uint.js","names":["assertNumberRange","value","min","max","typeName","BI","from","lt","gt","CodecBaseParseError","toString","createUintNumberCodec","byteLength","littleEndian","codec","createUintBICodec","__isFixedCodec__","pack","packable","unpack","unpackable","toNumber","shl","sub","createFixedBytesCodec","biIsh","endianType","Number","isSafeInteger","num","result","DataView","ArrayBuffer","i","setUint8","and","shr","Uint8Array","buffer","buf","view","or","getUint8","Uint8","Uint16LE","Uint16BE","Uint16","Uint32LE","Uint32BE","Uint32","Uint64LE","Uint64BE","Uint64","Uint128LE","Uint128BE","Uint128","Uint256LE","Uint256BE","Uint256","Uint512LE","Uint512BE","Uint512"],"sources":["../../src/number/uint.ts"],"sourcesContent":["import { BI, BIish } from \"@ckb-lumos/bi\";\nimport { createFixedBytesCodec, FixedBytesCodec } from \"../base\";\nimport { CodecBaseParseError } from \"../error\";\n\nfunction assertNumberRange(\n  value: BIish,\n  min: BIish,\n  max: BIish,\n  typeName: string\n): void {\n  value = BI.from(value);\n\n  if (value.lt(min) || value.gt(max)) {\n    throw new CodecBaseParseError(\n      `Value must be between ${min.toString()} and ${max.toString()}, but got ${value.toString()}`,\n      typeName\n    );\n  }\n}\n\nfunction createUintNumberCodec(\n  byteLength: number,\n  littleEndian = false\n): FixedBytesCodec<number, BIish> {\n  const codec = createUintBICodec(byteLength, littleEndian);\n  return {\n    __isFixedCodec__: true,\n    byteLength,\n    pack: (packable) => codec.pack(packable),\n    unpack: (unpackable) => codec.unpack(unpackable).toNumber(),\n  };\n}\n\nconst createUintBICodec = (byteLength: number, littleEndian = false) => {\n  const max = BI.from(1)\n    .shl(byteLength * 8)\n    .sub(1);\n\n  return createFixedBytesCodec<BI, BIish>({\n    byteLength,\n    pack(biIsh) {\n      let endianType: \"LE\" | \"BE\" | \"\" = littleEndian ? \"LE\" : \"BE\";\n\n      if (byteLength <= 1) {\n        endianType = \"\";\n      }\n      const typeName = `Uint${byteLength * 8}${endianType}`;\n      if (typeof biIsh === \"number\" && !Number.isSafeInteger(biIsh)) {\n        throw new CodecBaseParseError(\n          `${biIsh} is not a safe integer`,\n          typeName\n        );\n      }\n\n      let num = BI.from(biIsh);\n      assertNumberRange(num, 0, max, typeName);\n\n      const result = new DataView(new ArrayBuffer(byteLength));\n\n      for (let i = 0; i < byteLength; i++) {\n        if (littleEndian) {\n          result.setUint8(i, num.and(0xff).toNumber());\n        } else {\n          result.setUint8(byteLength - i - 1, num.and(0xff).toNumber());\n        }\n        num = num.shr(8);\n      }\n\n      return new Uint8Array(result.buffer);\n    },\n    unpack: (buf) => {\n      const view = new DataView(Uint8Array.from(buf).buffer);\n      let result = BI.from(0);\n\n      for (let i = 0; i < byteLength; i++) {\n        if (littleEndian) {\n          result = result.or(BI.from(view.getUint8(i)).shl(i * 8));\n        } else {\n          result = result.shl(8).or(view.getUint8(i));\n        }\n      }\n\n      return result;\n    },\n  });\n};\n\nexport const Uint8 = createUintNumberCodec(1);\n\nexport const Uint16LE = createUintNumberCodec(2, true);\nexport const Uint16BE = createUintNumberCodec(2);\n/**\n * @alias Uint16LE\n */\nexport const Uint16 = Uint16LE;\n\nexport const Uint32LE = createUintNumberCodec(4, true);\nexport const Uint32BE = createUintNumberCodec(4);\n/**\n * @alias Uint32LE\n */\nexport const Uint32 = Uint32LE;\n\nexport const Uint64LE = createUintBICodec(8, true);\nexport const Uint64BE = createUintBICodec(8);\n/**\n * @alias Uint64LE\n */\nexport const Uint64 = Uint64LE;\n\nexport const Uint128LE = createUintBICodec(16, true);\nexport const Uint128BE = createUintBICodec(16);\n/**\n * @alias Uint128LE\n */\nexport const Uint128 = Uint128LE;\n\nexport const Uint256LE = createUintBICodec(32, true);\nexport const Uint256BE = createUintBICodec(32);\n/**\n * @alias Uint256LE\n */\nexport const Uint256 = Uint256LE;\n\nexport const Uint512LE = createUintBICodec(64, true);\nexport const Uint512BE = createUintBICodec(64);\n/**\n * @alias Uint512LE\n */\nexport const Uint512 = Uint512LE;\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA,SAASA,iBAAT,CACEC,KADF,EAEEC,GAFF,EAGEC,GAHF,EAIEC,QAJF,EAKQ;EACNH,KAAK,GAAGI,MAAA,CAAGC,IAAH,CAAQL,KAAR,CAAR;;EAEA,IAAIA,KAAK,CAACM,EAAN,CAASL,GAAT,KAAiBD,KAAK,CAACO,EAAN,CAASL,GAAT,CAArB,EAAoC;IAClC,MAAM,IAAIM,0BAAJ,CACH,yBAAwBP,GAAG,CAACQ,QAAJ,EAAe,QAAOP,GAAG,CAACO,QAAJ,EAAe,aAAYT,KAAK,CAACS,QAAN,EAAiB,EADvF,EAEJN,QAFI,CAAN;EAID;AACF;;AAED,SAASO,qBAAT,CACEC,UADF,EAEEC,YAAY,GAAG,KAFjB,EAGkC;EAChC,MAAMC,KAAK,GAAGC,iBAAiB,CAACH,UAAD,EAAaC,YAAb,CAA/B;EACA,OAAO;IACLG,gBAAgB,EAAE,IADb;IAELJ,UAFK;IAGLK,IAAI,EAAGC,QAAD,IAAcJ,KAAK,CAACG,IAAN,CAAWC,QAAX,CAHf;IAILC,MAAM,EAAGC,UAAD,IAAgBN,KAAK,CAACK,MAAN,CAAaC,UAAb,EAAyBC,QAAzB;EAJnB,CAAP;AAMD;;AAED,MAAMN,iBAAiB,GAAG,CAACH,UAAD,EAAqBC,YAAY,GAAG,KAApC,KAA8C;EACtE,MAAMV,GAAG,GAAGE,MAAA,CAAGC,IAAH,CAAQ,CAAR,EACTgB,GADS,CACLV,UAAU,GAAG,CADR,EAETW,GAFS,CAEL,CAFK,CAAZ;;EAIA,OAAO,IAAAC,2BAAA,EAAiC;IACtCZ,UADsC;;IAEtCK,IAAI,CAACQ,KAAD,EAAQ;MACV,IAAIC,UAA4B,GAAGb,YAAY,GAAG,IAAH,GAAU,IAAzD;;MAEA,IAAID,UAAU,IAAI,CAAlB,EAAqB;QACnBc,UAAU,GAAG,EAAb;MACD;;MACD,MAAMtB,QAAQ,GAAI,OAAMQ,UAAU,GAAG,CAAE,GAAEc,UAAW,EAApD;;MACA,IAAI,OAAOD,KAAP,KAAiB,QAAjB,IAA6B,CAACE,MAAM,CAACC,aAAP,CAAqBH,KAArB,CAAlC,EAA+D;QAC7D,MAAM,IAAIhB,0BAAJ,CACH,GAAEgB,KAAM,wBADL,EAEJrB,QAFI,CAAN;MAID;;MAED,IAAIyB,GAAG,GAAGxB,MAAA,CAAGC,IAAH,CAAQmB,KAAR,CAAV;;MACAzB,iBAAiB,CAAC6B,GAAD,EAAM,CAAN,EAAS1B,GAAT,EAAcC,QAAd,CAAjB;MAEA,MAAM0B,MAAM,GAAG,IAAIC,QAAJ,CAAa,IAAIC,WAAJ,CAAgBpB,UAAhB,CAAb,CAAf;;MAEA,KAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrB,UAApB,EAAgCqB,CAAC,EAAjC,EAAqC;QACnC,IAAIpB,YAAJ,EAAkB;UAChBiB,MAAM,CAACI,QAAP,CAAgBD,CAAhB,EAAmBJ,GAAG,CAACM,GAAJ,CAAQ,IAAR,EAAcd,QAAd,EAAnB;QACD,CAFD,MAEO;UACLS,MAAM,CAACI,QAAP,CAAgBtB,UAAU,GAAGqB,CAAb,GAAiB,CAAjC,EAAoCJ,GAAG,CAACM,GAAJ,CAAQ,IAAR,EAAcd,QAAd,EAApC;QACD;;QACDQ,GAAG,GAAGA,GAAG,CAACO,GAAJ,CAAQ,CAAR,CAAN;MACD;;MAED,OAAO,IAAIC,UAAJ,CAAeP,MAAM,CAACQ,MAAtB,CAAP;IACD,CA/BqC;;IAgCtCnB,MAAM,EAAGoB,GAAD,IAAS;MACf,MAAMC,IAAI,GAAG,IAAIT,QAAJ,CAAaM,UAAU,CAAC/B,IAAX,CAAgBiC,GAAhB,EAAqBD,MAAlC,CAAb;;MACA,IAAIR,MAAM,GAAGzB,MAAA,CAAGC,IAAH,CAAQ,CAAR,CAAb;;MAEA,KAAK,IAAI2B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrB,UAApB,EAAgCqB,CAAC,EAAjC,EAAqC;QACnC,IAAIpB,YAAJ,EAAkB;UAChBiB,MAAM,GAAGA,MAAM,CAACW,EAAP,CAAUpC,MAAA,CAAGC,IAAH,CAAQkC,IAAI,CAACE,QAAL,CAAcT,CAAd,CAAR,EAA0BX,GAA1B,CAA8BW,CAAC,GAAG,CAAlC,CAAV,CAAT;QACD,CAFD,MAEO;UACLH,MAAM,GAAGA,MAAM,CAACR,GAAP,CAAW,CAAX,EAAcmB,EAAd,CAAiBD,IAAI,CAACE,QAAL,CAAcT,CAAd,CAAjB,CAAT;QACD;MACF;;MAED,OAAOH,MAAP;IACD;EA7CqC,CAAjC,CAAP;AA+CD,CApDD;;AAsDO,MAAMa,KAAK,GAAGhC,qBAAqB,CAAC,CAAD,CAAnC;;AAEA,MAAMiC,QAAQ,GAAGjC,qBAAqB,CAAC,CAAD,EAAI,IAAJ,CAAtC;;AACA,MAAMkC,QAAQ,GAAGlC,qBAAqB,CAAC,CAAD,CAAtC;AACP;AACA;AACA;;;AACO,MAAMmC,MAAM,GAAGF,QAAf;;AAEA,MAAMG,QAAQ,GAAGpC,qBAAqB,CAAC,CAAD,EAAI,IAAJ,CAAtC;;AACA,MAAMqC,QAAQ,GAAGrC,qBAAqB,CAAC,CAAD,CAAtC;AACP;AACA;AACA;;;AACO,MAAMsC,MAAM,GAAGF,QAAf;;AAEA,MAAMG,QAAQ,GAAGnC,iBAAiB,CAAC,CAAD,EAAI,IAAJ,CAAlC;;AACA,MAAMoC,QAAQ,GAAGpC,iBAAiB,CAAC,CAAD,CAAlC;AACP;AACA;AACA;;;AACO,MAAMqC,MAAM,GAAGF,QAAf;;AAEA,MAAMG,SAAS,GAAGtC,iBAAiB,CAAC,EAAD,EAAK,IAAL,CAAnC;;AACA,MAAMuC,SAAS,GAAGvC,iBAAiB,CAAC,EAAD,CAAnC;AACP;AACA;AACA;;;AACO,MAAMwC,OAAO,GAAGF,SAAhB;;AAEA,MAAMG,SAAS,GAAGzC,iBAAiB,CAAC,EAAD,EAAK,IAAL,CAAnC;;AACA,MAAM0C,SAAS,GAAG1C,iBAAiB,CAAC,EAAD,CAAnC;AACP;AACA;AACA;;;AACO,MAAM2C,OAAO,GAAGF,SAAhB;;AAEA,MAAMG,SAAS,GAAG5C,iBAAiB,CAAC,EAAD,EAAK,IAAL,CAAnC;;AACA,MAAM6C,SAAS,GAAG7C,iBAAiB,CAAC,EAAD,CAAnC;AACP;AACA;AACA;;;AACO,MAAM8C,OAAO,GAAGF,SAAhB"}