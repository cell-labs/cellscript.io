{"version":3,"file":"bytes.js","names":["bytifyRawString","rawString","assertUtf8String","buffer","ArrayBuffer","length","view","DataView","i","c","charCodeAt","setUint8","Uint8Array","bytifyHex","hex","assertHexString","slice","uint8s","push","parseInt","substr","from","bytifyArrayLike","xs","isValidU8Vec","Array","every","v","Error","bytify","bytesLike","isArray","equal","a","b","aUint8Array","bUint8Array","equalUint8Array","hexify","buf","map","toString","padStart","join","concat","bytesLikes","unmerged","totalSize","reduce","size","item","merged","offset","forEach","set"],"sources":["../src/bytes.ts"],"sourcesContent":["import { BytesLike } from \"./base\";\nimport { assertHexString, assertUtf8String } from \"./utils\";\n\nexport function bytifyRawString(rawString: string): Uint8Array {\n  assertUtf8String(rawString);\n\n  const buffer = new ArrayBuffer(rawString.length);\n  const view = new DataView(buffer);\n\n  for (let i = 0; i < rawString.length; i++) {\n    const c = rawString.charCodeAt(i);\n    view.setUint8(i, c);\n  }\n  return new Uint8Array(buffer);\n}\n\nfunction bytifyHex(hex: string): Uint8Array {\n  assertHexString(hex);\n\n  hex = hex.slice(2);\n  const uint8s = [];\n  for (let i = 0; i < hex.length; i += 2) {\n    uint8s.push(parseInt(hex.substr(i, 2), 16));\n  }\n\n  return Uint8Array.from(uint8s);\n}\n\nfunction bytifyArrayLike(xs: ArrayLike<number>): Uint8Array {\n  const isValidU8Vec = Array.from(xs).every((v) => v >= 0 && v <= 255);\n  if (!isValidU8Vec) {\n    throw new Error(\"invalid ArrayLike, all elements must be 0-255\");\n  }\n\n  return Uint8Array.from(xs);\n}\n\n/**\n * convert a {@link BytesLike} to an Uint8Array\n * @param bytesLike\n */\nexport function bytify(bytesLike: BytesLike): Uint8Array {\n  if (bytesLike instanceof ArrayBuffer) return new Uint8Array(bytesLike);\n  if (bytesLike instanceof Uint8Array) return Uint8Array.from(bytesLike);\n  if (typeof bytesLike === \"string\") return bytifyHex(bytesLike);\n  if (Array.isArray(bytesLike)) return bytifyArrayLike(bytesLike);\n\n  throw new Error(`Cannot convert ${bytesLike}`);\n}\n\nexport function equal(a: BytesLike, b: BytesLike): boolean {\n  const aUint8Array = bytify(a);\n  const bUint8Array = bytify(b);\n  return equalUint8Array(aUint8Array, bUint8Array);\n}\n\nfunction equalUint8Array(a: Uint8Array, b: Uint8Array): boolean {\n  if (a.length !== b.length) return false;\n  for (let i = a.length; -1 < i; i -= 1) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n/**\n * convert a {@link BytesLike} to an even length hex string prefixed with \"0x\"\n * @param buf\n * @example\n * hexify([0,1,2,3]) // \"0x010203\"\n * hexify(Buffer.from([1, 2, 3])) // \"0x010203\"\n */\nexport function hexify(buf: BytesLike): string {\n  const hex = Array.from(bytify(buf))\n    .map((b) => b.toString(16).padStart(2, \"0\"))\n    .join(\"\");\n  return \"0x\" + hex;\n}\n\nexport function concat(...bytesLikes: BytesLike[]): Uint8Array {\n  const unmerged = bytesLikes.map(bytify);\n  const totalSize = unmerged.reduce((size, item) => size + item.length, 0);\n\n  const merged = new Uint8Array(totalSize);\n\n  let offset = 0;\n  unmerged.forEach((item) => {\n    merged.set(item, offset);\n    offset += item.length;\n  });\n\n  return merged;\n}\n\n// export function split(bytes: BytesLike, points: number[]): Uint8Array[] {\n//   const u8vec = bytify(bytes);\n//   const result: Uint8Array[] = [];\n//   let offset = 0;\n//   for (const point of points) {\n//     result.push(u8vec.slice(offset, offset + point));\n//     offset += point;\n//   }\n//   result.push(u8vec.slice(offset));\n//   return result;\n// }\n"],"mappings":"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"}