{"version":3,"file":"index.js","names":["isBIish","value","match","BI","isBI","constructor","jsbi","_isBI","add","other","toBI","JSBI","toJSBI","sub","subtract","div","divide","mul","multiply","mod","remainder","abs","greaterThanOrEqual","unaryMinus","pow","exponentiate","and","bitwiseAnd","or","bitwiseOr","xor","bitwiseXor","not","bitwiseNot","mask","jsbiOther","lessThan","Error","length","toString","lessThanOrEqual","maskNum","leftShift","signedRightShift","shl","shr","eq","equal","lt","lte","gt","greaterThan","gte","isNegative","isZero","toNumber","toBigInt","BigInt","e","radix","toHexString","from","isBILike","validUnitNames","ckbDecimals","negativeOne","formatUnit","unit","decimals","parseDecimals","formatFixed","parseUnit","parseFixed","isValidDecimalSize","multiplier","Array","fill","join","wholePart","result","decimalPart","substring","valueParts","split","wholeValue","decimalValue","shannons","indexOf","Number","isInteger"],"sources":["../src/index.ts"],"sourcesContent":["import JSBI from \"jsbi\";\nexport type BIish = number | string | bigint | BI;\n\nexport function isBIish(value: unknown): value is BIish {\n  return (\n    value !== null &&\n    ((typeof value === \"number\" && value % 1 === 0) ||\n      (typeof value === \"string\" &&\n        (!!value.match(/^0x(0|[0-9a-fA-F]+)$/) ||\n          !!value.match(/^-?[0-9]+$/))) ||\n      typeof value === \"bigint\" ||\n      BI.isBI(value))\n  );\n}\n\nexport class BI {\n  private readonly jsbi: JSBI;\n  readonly _isBI: boolean;\n\n  constructor(value: JSBI) {\n    this.jsbi = value;\n    this._isBI = true;\n  }\n\n  add(other: BIish): BI {\n    return toBI(JSBI.add(this.jsbi, toJSBI(other)));\n  }\n\n  sub(other: BIish): BI {\n    return toBI(JSBI.subtract(this.jsbi, toJSBI(other)));\n  }\n\n  div(other: BIish): BI {\n    return toBI(JSBI.divide(this.jsbi, toJSBI(other)));\n  }\n\n  mul(other: BIish): BI {\n    return toBI(JSBI.multiply(this.jsbi, toJSBI(other)));\n  }\n\n  mod(other: BIish): BI {\n    return toBI(JSBI.remainder(this.jsbi, toJSBI(other)));\n  }\n\n  abs(): BI {\n    if (JSBI.greaterThanOrEqual(this.jsbi, toJSBI(0))) {\n      return toBI(this.jsbi);\n    } else {\n      return toBI(JSBI.unaryMinus(this.jsbi));\n    }\n  }\n\n  pow(other: BIish): BI {\n    return toBI(JSBI.exponentiate(this.jsbi, toJSBI(other)));\n  }\n\n  and(other: BIish): BI {\n    return toBI(JSBI.bitwiseAnd(this.jsbi, toJSBI(other)));\n  }\n\n  or(other: BIish): BI {\n    return toBI(JSBI.bitwiseOr(this.jsbi, toJSBI(other)));\n  }\n\n  xor(other: BIish): BI {\n    return toBI(JSBI.bitwiseXor(this.jsbi, toJSBI(other)));\n  }\n\n  not(): BI {\n    return toBI(JSBI.bitwiseNot(this.jsbi));\n  }\n\n  mask(other: BIish): BI {\n    const jsbiOther = toJSBI(other);\n    if (\n      JSBI.lessThan(jsbiOther, toJSBI(0)) ||\n      JSBI.lessThan(this.jsbi, toJSBI(0))\n    ) {\n      throw new Error(\"mask works only with positive numbers\");\n    }\n\n    const length = toJSBI(this.jsbi.toString(2).length);\n    if (JSBI.lessThanOrEqual(length, jsbiOther)) {\n      return toBI(this.jsbi);\n    } else {\n      const maskNum = JSBI.leftShift(\n        JSBI.signedRightShift(this.jsbi, jsbiOther),\n        jsbiOther\n      );\n      return toBI(JSBI.bitwiseXor(this.jsbi, maskNum));\n    }\n  }\n\n  shl(other: BIish): BI {\n    return toBI(JSBI.leftShift(this.jsbi, toJSBI(other)));\n  }\n\n  shr(other: BIish): BI {\n    return toBI(JSBI.signedRightShift(this.jsbi, toJSBI(other)));\n  }\n\n  eq(other: BIish): boolean {\n    return JSBI.equal(this.jsbi, toJSBI(other));\n  }\n\n  lt(other: BIish): boolean {\n    return JSBI.lessThan(this.jsbi, toJSBI(other));\n  }\n\n  lte(other: BIish): boolean {\n    return JSBI.lessThanOrEqual(this.jsbi, toJSBI(other));\n  }\n\n  gt(other: BIish): boolean {\n    return JSBI.greaterThan(this.jsbi, toJSBI(other));\n  }\n\n  gte(other: BIish): boolean {\n    return JSBI.greaterThanOrEqual(this.jsbi, toJSBI(other));\n  }\n\n  isNegative(): boolean {\n    return JSBI.lessThan(this.jsbi, toJSBI(0));\n  }\n\n  isZero(): boolean {\n    return JSBI.equal(this.jsbi, toJSBI(0));\n  }\n\n  toNumber(): number {\n    return JSBI.toNumber(this.jsbi);\n  }\n\n  toBigInt(): bigint {\n    try {\n      return BigInt(this.jsbi.toString(10));\n    } catch (e) {\n      throw new Error(\"this platform does not support BigInt\");\n    }\n  }\n\n  toString(radix?: number): string {\n    radix = radix || 10;\n    return this.jsbi.toString(radix);\n  }\n\n  toHexString(): string {\n    if (JSBI.lessThan(this.jsbi, toJSBI(0))) {\n      return \"-0x\" + JSBI.unaryMinus(this.jsbi).toString(16);\n    } else {\n      return \"0x\" + this.jsbi.toString(16);\n    }\n  }\n\n  static from(value: unknown): BI {\n    if (value instanceof BI) {\n      return value;\n    } else if (isBIish(value)) {\n      return toBI(toJSBI(value));\n    } else if (value instanceof JSBI) {\n      return toBI(toJSBI(value.toString()));\n    } else {\n      throw new Error(`invalid type: ${value} can't be converted into BI`);\n    }\n  }\n\n  static isBI(value: unknown): value is BI {\n    return isBILike(value) && !!value._isBI;\n  }\n}\n\nfunction isBILike(value: unknown): value is Record<string, unknown> {\n  if (value == null) return false;\n  return typeof value === \"object\";\n}\n\nfunction toBI(value: JSBI): BI {\n  return new BI(value);\n}\n\nexport function toJSBI(value: BIish): JSBI {\n  if (typeof value === \"number\" || typeof value === \"string\") {\n    return JSBI.BigInt(value);\n  } else {\n    return JSBI.BigInt(value.toString());\n  }\n}\n\nexport type Unit = \"shannon\" | \"ckb\" | number;\n\nconst validUnitNames = [\"shannon\", \"ckb\"];\n\nexport const ckbDecimals = 8;\n\nconst negativeOne = BI.from(-1);\n\nexport function formatUnit(value: BIish, unit: Unit): string {\n  const decimals = parseDecimals(unit);\n  return formatFixed(value, decimals);\n}\n\nexport function parseUnit(value: string, unit: Unit): BI {\n  const decimals = parseDecimals(unit);\n  return parseFixed(value, decimals);\n}\n\nfunction formatFixed(value: BIish, decimals: number): string {\n  if (!isValidDecimalSize(decimals)) {\n    throw new Error(`decimal size must be a non-negative integer`);\n  }\n\n  const multiplier = \"1\" + Array(decimals).fill(\"0\").join(\"\");\n\n  value = BI.from(value);\n  const isNegative = value.isNegative();\n  if (isNegative) {\n    value = value.mul(negativeOne);\n  }\n\n  const wholePart = value.div(multiplier).toString();\n  let result = wholePart;\n  if (multiplier.length > 1) {\n    let decimalPart = value.mod(multiplier).toString();\n    while (decimalPart.length < multiplier.length - 1) {\n      decimalPart = \"0\" + decimalPart;\n    }\n    // remove trailing zeros\n    decimalPart = decimalPart.match(/^([0-9]*[1-9]|0)(0*)/)![1];\n    result += \".\" + decimalPart;\n  }\n\n  if (isNegative) {\n    result = \"-\" + result;\n  }\n\n  return result;\n}\n\nfunction parseFixed(value: string, decimals: number): BI {\n  if (!isValidDecimalSize(decimals)) {\n    throw new Error(`decimal size must be a non-negative integer`);\n  }\n\n  // check if value represents a valid decimal number\n  if (!value.match(/^-?\\d+(\\.\\d{1,})?$/)) {\n    throw new Error(\"invalid decimal string\");\n  }\n\n  const multiplier = \"1\" + Array(decimals).fill(\"0\").join(\"\");\n\n  const isNegative = value.substring(0, 1) === \"-\";\n\n  if (isNegative) {\n    value = value.substring(1);\n  }\n\n  let wholePart, decimalPart;\n  const valueParts = value.split(\".\");\n  if (valueParts.length === 1) {\n    wholePart = valueParts[0];\n    decimalPart = \"0\";\n  } else if (valueParts.length === 2) {\n    wholePart = valueParts[0];\n    decimalPart = valueParts[1];\n  } else {\n    throw new Error(\"too many decimal points (should not happen)\");\n  }\n\n  // remove leading zeros of whole part\n  while (wholePart.length > 0 && wholePart[0] === \"0\") {\n    wholePart = wholePart.substring(1);\n  }\n  if (wholePart === \"\") {\n    wholePart = \"0\";\n  }\n\n  // remove trailing zeros of decimal part\n  while (\n    decimalPart.length > 0 &&\n    decimalPart[decimalPart.length - 1] === \"0\"\n  ) {\n    decimalPart = decimalPart.substring(0, decimalPart.length - 1);\n  }\n  if (decimalPart.length > multiplier.length - 1) {\n    throw new Error(\"decimal part exceeds max decimals\");\n  }\n  if (decimalPart === \"\") {\n    decimalPart = \"0\";\n  }\n\n  // pad decimal part with zeros to get to shannon\n  while (decimalPart.length < multiplier.length - 1) {\n    decimalPart += \"0\";\n  }\n\n  const wholeValue = BI.from(wholePart);\n  const decimalValue = BI.from(decimalPart);\n\n  let shannons = wholeValue.mul(multiplier).add(decimalValue);\n  if (isNegative) {\n    shannons = shannons.mul(negativeOne);\n  }\n\n  return shannons;\n}\n\nfunction parseDecimals(unit: Unit): number {\n  let decimals = 0;\n  if (typeof unit === \"string\") {\n    if (validUnitNames.indexOf(unit) === -1) {\n      throw new Error(\n        `invalid unit name, supported names are ${validUnitNames.join(\", \")}`\n      );\n    }\n    if (unit === \"ckb\") {\n      decimals = ckbDecimals;\n    }\n  } else {\n    if (isValidDecimalSize(unit)) {\n      decimals = unit;\n    } else {\n      throw new Error(`unit of integer must be a non-negative integer`);\n    }\n  }\n  return decimals;\n}\n\nfunction isValidDecimalSize(decimals: number): boolean {\n  return Number.isInteger(decimals) && decimals >= 0;\n}\n"],"mappings":"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"}