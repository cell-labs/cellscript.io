{"version":3,"file":"services.js","names":["instanceOfScriptWrapper","object","UnwrapScriptWrapper","inputScript","script","generateSearchKey","queries","undefined","filter","script_type","lock","toScript","type","block_range","fromBlock","toBlock","BI","from","add","toString","outputDataLenRange","output_data_len_range","outputCapacityRange","output_capacity_range","scriptLenRange","script_len_range","Error","toSearchKey","getHexStringBytes","hexString","utils","assertHexString","Math","ceil","substr","length","requestBatch","rpcUrl","data","res","fetch","method","body","JSON","stringify","headers","status","result","json","error"],"sources":["../src/services.ts"],"sourcesContent":["import { utils, HexString, ScriptWrapper, Script } from \"@ckb-lumos/base\";\nimport { CKBIndexerQueryOptions, SearchKey } from \"./type\";\nimport fetch from \"cross-fetch\";\nimport { BI } from \"@ckb-lumos/bi\";\nimport { toScript } from \"./paramsFormatter\";\nimport type * as RPCType from \"./rpcType\";\nimport { toSearchKey } from \"./resultFormatter\";\n\nfunction instanceOfScriptWrapper(object: unknown): object is ScriptWrapper {\n  return typeof object === \"object\" && object != null && \"script\" in object;\n}\nconst UnwrapScriptWrapper = (inputScript: ScriptWrapper | Script): Script => {\n  if (instanceOfScriptWrapper(inputScript)) {\n    return inputScript.script;\n  }\n  return inputScript;\n};\nconst generateSearchKey = (queries: CKBIndexerQueryOptions): SearchKey => {\n  let script: RPCType.Script | undefined = undefined;\n  const filter: RPCType.SearchFilter = {};\n  let script_type: RPCType.ScriptType | undefined = undefined;\n  if (queries.lock) {\n    const lock = UnwrapScriptWrapper(queries.lock);\n    script = toScript(lock);\n    script_type = \"lock\";\n    if (queries.type && typeof queries.type !== \"string\") {\n      const type = UnwrapScriptWrapper(queries.type);\n      filter.script = toScript(type);\n    }\n  } else if (queries.type && typeof queries.type !== \"string\") {\n    const type = UnwrapScriptWrapper(queries.type);\n    script = toScript(type);\n    script_type = \"type\";\n  }\n  let block_range: RPCType.HexadecimalRange | null = null;\n  if (queries.fromBlock && queries.toBlock) {\n    //toBlock+1 cause toBlock need to be included\n    block_range = [\n      queries.fromBlock,\n      `0x${BI.from(queries.toBlock).add(1).toString(16)}`,\n    ];\n  }\n  if (block_range) {\n    filter.block_range = block_range;\n  }\n  if (queries.outputDataLenRange) {\n    filter.output_data_len_range = queries.outputDataLenRange;\n  }\n  if (queries.outputCapacityRange) {\n    filter.output_capacity_range = queries.outputCapacityRange;\n  }\n  if (queries.scriptLenRange) {\n    filter.script_len_range = queries.scriptLenRange;\n  }\n  if (!script) {\n    throw new Error(\"Either lock or type script must be provided!\");\n  }\n  if (!script_type) {\n    throw new Error(\"script_type must be provided\");\n  }\n  return toSearchKey({\n    script,\n    script_type,\n    filter,\n  });\n};\n\nconst getHexStringBytes = (hexString: HexString): number => {\n  utils.assertHexString(\"\", hexString);\n  return Math.ceil(hexString.substr(2).length / 2);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst requestBatch = async (rpcUrl: string, data: unknown): Promise<any> => {\n  const res: Response = await fetch(rpcUrl, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  if (res.status !== 200) {\n    throw new Error(`indexer request failed with HTTP code ${res.status}`);\n  }\n  const result = await res.json();\n  if (result.error !== undefined) {\n    throw new Error(\n      `indexer request rpc failed with error: ${JSON.stringify(result.error)}`\n    );\n  }\n  return result;\n};\n\nexport {\n  generateSearchKey,\n  getHexStringBytes,\n  instanceOfScriptWrapper,\n  requestBatch,\n};\n"],"mappings":"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"}