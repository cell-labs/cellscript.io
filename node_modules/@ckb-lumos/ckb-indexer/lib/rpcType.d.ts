import { HexString, HexNumber, Hash, Hexadecimal } from "@ckb-lumos/base";
export declare type Tip = {
    block_hash: HexNumber;
    block_number: HexString;
};
export declare type Script = {
    code_hash: HexString;
    hash_type: "type" | "data" | "data1";
    args: HexString;
};
export interface OutPoint {
    tx_hash: Hash;
    index: HexNumber;
}
export declare type CellOutput = {
    capacity: HexNumber;
    lock: Script;
    type?: Script;
};
export declare type HexadecimalRange = [Hexadecimal, Hexadecimal];
export declare type ScriptType = "type" | "lock";
export interface SearchFilter {
    script?: Script;
    output_data_len_range?: HexadecimalRange;
    output_capacity_range?: HexadecimalRange;
    block_range?: HexadecimalRange;
    script_len_range?: HexadecimalRange;
}
export interface SearchKey {
    script: Script;
    script_type: ScriptType;
    filter?: SearchFilter;
}
export interface GetCellsSearchKey extends SearchKey {
    with_data?: boolean;
}
export interface GetTransactionsSearchKey extends SearchKey {
    group_by_transaction?: boolean;
}
//# sourceMappingURL=rpcType.d.ts.map