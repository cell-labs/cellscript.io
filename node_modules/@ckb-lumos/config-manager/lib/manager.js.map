{"version":3,"file":"manager.js","names":["assertHexString","debugPath","string","test","Error","assertHash","hash","length","assertInteger","i","assert","condition","validateConfig","config","SCRIPTS","scriptName","Object","keys","scriptConfig","CODE_HASH","hashType","HASH_TYPE","TX_HASH","INDEX","depType","DEP_TYPE","shortId","SHORT_ID","undefined","predefined","LINA","getConfig","initializeConfigLegacy","env","process","configName","LUMOS_CONFIG_NAME","configFile","LUMOS_CONFIG_FILE","configFilename","data","require","readFileSync","loadedConfig","JSON","parse","deepFreeze","e","initializeConfig","inputConfig","logger","deprecated"],"sources":["../src/manager.ts"],"sourcesContent":["import deepFreeze from \"deep-freeze-strict\";\nimport { logger } from \"@ckb-lumos/base\";\nimport { Config } from \"./types\";\nimport { predefined } from \"./predefined\";\n\nfunction assertHexString(debugPath: string, string: string) {\n  if (!/^0x([0-9a-fA-F][0-9a-fA-F])*$/.test(string)) {\n    throw new Error(`${debugPath} must be a hex string!`);\n  }\n}\n\nfunction assertHash(debugPath: string, hash: string) {\n  assertHexString(debugPath, hash);\n  if (hash.length != 66) {\n    throw new Error(`${debugPath} must be a hex string of 66 bytes long!`);\n  }\n}\n\nfunction assertInteger(debugPath: string, i: string) {\n  if (i === \"0x0\") {\n    return;\n  }\n  if (!/^0x[1-9a-fA-F][0-9a-fA-F]*$/.test(i)) {\n    throw new Error(`${debugPath} must be a hex integer!`);\n  }\n}\n\nfunction assert(condition: unknown, debugPath = \"variable\"): asserts condition {\n  if (!condition) throw new Error(`${debugPath} is not valid`);\n}\n\nexport function validateConfig(config: Config): void {\n  assert(\n    typeof config.SCRIPTS === \"object\" && config.SCRIPTS != null,\n    \"config.SCRIPT\"\n  );\n\n  for (const scriptName of Object.keys(config.SCRIPTS)) {\n    const scriptConfig = config.SCRIPTS[scriptName];\n\n    assert(scriptConfig?.CODE_HASH);\n\n    assertHash(`SCRIPTS.${scriptName}.CODE_HASH`, scriptConfig.CODE_HASH);\n    const hashType = scriptConfig.HASH_TYPE;\n    if (hashType !== \"type\" && hashType !== \"data\") {\n      throw new Error(\n        `SCRIPTS.${scriptName}.HASH_TYPE must either be data or type!`\n      );\n    }\n    assertHash(`SCRIPTS.${scriptName}.TX_HASH`, scriptConfig.TX_HASH);\n    assertInteger(`SCRIPTS.${scriptName}.INDEX`, scriptConfig.INDEX);\n    const depType = scriptConfig.DEP_TYPE;\n    if (depType !== \"depGroup\" && depType !== \"code\") {\n      throw new Error(\n        `SCRIPTS.${scriptName}.DEP_TYPE must either be depGroup or code!`\n      );\n    }\n    const shortId = scriptConfig.SHORT_ID;\n    // Short ID is optional\n    if (shortId != undefined) {\n      if (typeof shortId !== \"number\") {\n        throw new Error(\"SHORT_ID must be a number!\");\n      }\n    }\n  }\n}\n\nlet config: Config = predefined.LINA;\n\nexport function getConfig(): Config {\n  return config;\n}\n\n/**\n * Initialize current app with a config. The initializaton steps work as follows:\n * 1. If `LUMOS_CONFIG_NAME` environment variable is set to a predefined config,\n * the predefined config is loaded;\n * 2. If `LUMOS_CONFIG_FILE` environment variable is set, it will be used as the\n * name of a file containing the Config to use.\n * 3. A file named `config.json` in current running directory will be used as the\n * file containing the Config to use.\n * @deprecated\n * @returns void\n */\nfunction initializeConfigLegacy() {\n  const env = process?.env;\n  const configName = env?.LUMOS_CONFIG_NAME;\n\n  if (\n    (configName === \"LINA\" || configName === \"AGGRON4\") &&\n    predefined[configName]\n  ) {\n    config = predefined[configName];\n    return;\n  }\n\n  const configFile = env?.LUMOS_CONFIG_FILE;\n  const configFilename = configFile || \"config.json\";\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const data = require(\"fs\").readFileSync(configFilename);\n    const loadedConfig = JSON.parse(data);\n    validateConfig(loadedConfig);\n    config = deepFreeze(loadedConfig);\n  } catch (e) {\n    throw new Error(`Error loading config from file ${configFilename}: ${e}`);\n  }\n}\n\nexport function initializeConfig(inputConfig?: Config): void {\n  if (!inputConfig) {\n    logger.deprecated(\n      \"initializeConfig with env will be deprecated, please migrate to initializeConfig(...)\"\n    );\n    initializeConfigLegacy();\n  } else {\n    validateConfig(inputConfig);\n    config = deepFreeze(inputConfig);\n  }\n}\n"],"mappings":"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"}