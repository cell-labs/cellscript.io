{"version":3,"file":"index.js","names":["ParamsFormatter","paramsFormatter","ResultFormatter","resultFormatter","CKBRPC","Base","config","node","url","constructor","timeout","setNode","Object","defineProperties","addMethod","value","enumerable","writable","configurable","keys","rpcProperties","forEach","name","assign","options","method","Method","defineProperty","call","createBatchRequest","params","ctx","proxied","Proxy","set","p","methods","indexOf","MethodInBatchNotFoundException","Reflect","add","args","push","remove","i","splice","exec","payload","map","f","getPayload","err","PayloadInBatchException","message","batchRes","axios","headers","data","httpAgent","httpsAgent","res","id","IdNotMatchedInBatchException","resultFormatters","result"],"sources":["../src/index.ts"],"sourcesContent":["// import axios from 'axios'\nimport { Base } from \"./Base\";\nimport { Method } from \"./method\";\nimport { CKBComponents } from \"./types/api\";\n\nimport { formatter as paramsFormatter } from \"./paramsFormatter\";\nimport * as resultFormatter from \"./resultFormatter\";\n\nimport {\n  IdNotMatchedInBatchException,\n  MethodInBatchNotFoundException,\n  PayloadInBatchException,\n} from \"./exceptions\";\nimport axios from \"axios\";\nimport { RPCConfig } from \"./types/common\";\n// import { MethodInBatchNotFoundException, PayloadInBatchException, IdNotMatchedInBatchException } from './exceptions'\n\nexport const ParamsFormatter = paramsFormatter;\nexport const ResultFormatter = resultFormatter;\n\nexport class CKBRPC extends Base {\n  #config: RPCConfig;\n  #node: CKBComponents.Node = {\n    url: \"\",\n  };\n\n  get node(): CKBComponents.Node {\n    return this.#node;\n  }\n\n  #paramsFormatter = paramsFormatter;\n\n  get paramsFormatter(): typeof paramsFormatter {\n    return this.#paramsFormatter;\n  }\n\n  #resultFormatter = resultFormatter;\n\n  get resultFormatter(): typeof resultFormatter {\n    return this.#resultFormatter;\n  }\n\n  constructor(url: string, config: RPCConfig = { timeout: 30000 }) {\n    super();\n    this.setNode({ url });\n    this.#config = config;\n\n    Object.defineProperties(this, {\n      addMethod: {\n        value: this.addMethod,\n        enumerable: false,\n        writable: false,\n        configurable: false,\n      },\n      setNode: {\n        value: this.setNode,\n        enumerable: false,\n        writable: false,\n        configurable: false,\n      },\n      // createBatchRequest: { value: this.createBatchRequest, enumerable: false, writable: false, configurable: false },\n    });\n\n    Object.keys(this.rpcProperties).forEach((name) => {\n      this.addMethod({ name, ...this.rpcProperties[name] }, config);\n    });\n  }\n\n  public setNode(node: CKBComponents.Node): CKBComponents.Node {\n    Object.assign(this.node, node);\n    return this.node;\n  }\n\n  public addMethod = (\n    options: CKBComponents.Method,\n    config?: RPCConfig\n  ): void => {\n    const method = new Method(this.node, options, config);\n\n    Object.defineProperty(this, options.name, {\n      value: method.call,\n      enumerable: true,\n    });\n  };\n  /* eslint-disable */\n  public createBatchRequest = <\n    N extends keyof Base,\n    P extends (string | number | object)[],\n    R = any[]\n  >(\n    // TODO fix me\n    // params: [method: N, ...rest: P][] = [],\n    params: any = []\n  ) => {\n    const ctx = this;\n\n    // TODO fix me\n    const proxied: any = new Proxy([], {\n      set(...p) {\n        const methods = Object.keys(ctx);\n        if (p[1] !== \"length\") {\n          const name = p?.[2]?.[0];\n          if (methods.indexOf(name) === -1) {\n            throw new MethodInBatchNotFoundException(name);\n          }\n        }\n        return Reflect.set(...p);\n      },\n    });\n\n    Object.defineProperties(proxied, {\n      add: {\n        value(...args: P) {\n          this.push(args);\n          return this;\n        },\n      },\n      remove: {\n        value(i: number) {\n          this.splice(i, 1);\n          return this;\n        },\n      },\n      exec: {\n        async value() {\n          // TODO fix me\n          const payload = proxied.map(([f, ...p]: any, i: any) => {\n            try {\n              const method = new Method(ctx.node, {\n                ...ctx.rpcProperties[f],\n                name: f,\n              });\n              return method.getPayload(...p);\n            } catch (err) {\n              throw new PayloadInBatchException(i, (err as Error).message);\n            }\n          });\n\n          const batchRes = await axios({\n            method: \"POST\",\n            headers: { \"content-type\": \"application/json\" },\n            data: payload,\n            url: ctx.#node.url,\n            httpAgent: ctx.#node.httpAgent,\n            httpsAgent: ctx.#node.httpsAgent,\n            timeout: ctx.#config.timeout,\n          });\n\n          return batchRes.data.map((res: any, i: number) => {\n            if (res.id !== payload[i].id) {\n              return new IdNotMatchedInBatchException(i, payload[i].id, res.id);\n            }\n            return (\n              ctx.rpcProperties[proxied[i][0]].resultFormatters?.(res.result) ??\n              res.result\n            );\n          });\n        },\n      },\n    });\n    // TODO fix me\n    params.forEach((p: any) => proxied.push(p));\n\n    return proxied as typeof proxied & {\n      add: (n: N, ...p: P) => typeof proxied;\n      remove: (index: number) => typeof proxied;\n      exec: () => Promise<R>;\n    };\n  };\n}\n\nexport { CKBRPC as RPC };\n"],"mappings":";;;;;;;AACA;;AACA;;AAGA;;AACA;;AAEA;;AAKA;;;;;;;;AAbA;AAeA;AAEO,MAAMA,eAAe,GAAGC,0BAAxB;;AACA,MAAMC,eAAe,GAAGC,eAAxB;;;AAEA,MAAMC,MAAN,SAAqBC,UAArB,CAA0B;EAC/B,CAACC,MAAD;EACA,CAACC,IAAD,GAA4B;IAC1BC,GAAG,EAAE;EADqB,CAA5B;;EAIQ,IAAJD,IAAI,GAAuB;IAC7B,OAAO,KAAK,CAACA,IAAb;EACD;;EAED,CAACN,eAAD,GAAmBA,0BAAnB;;EAEmB,IAAfA,eAAe,GAA2B;IAC5C,OAAO,KAAK,CAACA,eAAb;EACD;;EAED,CAACE,eAAD,GAAmBA,eAAnB;;EAEmB,IAAfA,eAAe,GAA2B;IAC5C,OAAO,KAAK,CAACA,eAAb;EACD;;EAEDM,WAAW,CAACD,GAAD,EAAcF,MAAiB,GAAG;IAAEI,OAAO,EAAE;EAAX,CAAlC,EAAsD;IAC/D;IACA,KAAKC,OAAL,CAAa;MAAEH;IAAF,CAAb;IACA,KAAK,CAACF,MAAN,GAAeA,MAAf;IAEAM,MAAM,CAACC,gBAAP,CAAwB,IAAxB,EAA8B;MAC5BC,SAAS,EAAE;QACTC,KAAK,EAAE,KAAKD,SADH;QAETE,UAAU,EAAE,KAFH;QAGTC,QAAQ,EAAE,KAHD;QAITC,YAAY,EAAE;MAJL,CADiB;MAO5BP,OAAO,EAAE;QACPI,KAAK,EAAE,KAAKJ,OADL;QAEPK,UAAU,EAAE,KAFL;QAGPC,QAAQ,EAAE,KAHH;QAIPC,YAAY,EAAE;MAJP,CAPmB,CAa5B;;IAb4B,CAA9B;IAgBAN,MAAM,CAACO,IAAP,CAAY,KAAKC,aAAjB,EAAgCC,OAAhC,CAAyCC,IAAD,IAAU;MAChD,KAAKR,SAAL,CAAe;QAAEQ,IAAF;QAAQ,GAAG,KAAKF,aAAL,CAAmBE,IAAnB;MAAX,CAAf,EAAsDhB,MAAtD;IACD,CAFD;EAGD;;EAEMK,OAAO,CAACJ,IAAD,EAA+C;IAC3DK,MAAM,CAACW,MAAP,CAAc,KAAKhB,IAAnB,EAAyBA,IAAzB;IACA,OAAO,KAAKA,IAAZ;EACD;;EAEMO,SAAS,GAAG,CACjBU,OADiB,EAEjBlB,MAFiB,KAGR;IACT,MAAMmB,MAAM,GAAG,IAAIC,cAAJ,CAAW,KAAKnB,IAAhB,EAAsBiB,OAAtB,EAA+BlB,MAA/B,CAAf;IAEAM,MAAM,CAACe,cAAP,CAAsB,IAAtB,EAA4BH,OAAO,CAACF,IAApC,EAA0C;MACxCP,KAAK,EAAEU,MAAM,CAACG,IAD0B;MAExCZ,UAAU,EAAE;IAF4B,CAA1C;EAID,CAVe;EAWhB;;EACOa,kBAAkB,GAAG,EAK1B;EACA;EACAC,MAAW,GAAG,EAPY,KAQvB;IACH,MAAMC,GAAG,GAAG,IAAZ,CADG,CAGH;;IACA,MAAMC,OAAY,GAAG,IAAIC,KAAJ,CAAU,EAAV,EAAc;MACjCC,GAAG,CAAC,GAAGC,CAAJ,EAAO;QACR,MAAMC,OAAO,GAAGxB,MAAM,CAACO,IAAP,CAAYY,GAAZ,CAAhB;;QACA,IAAII,CAAC,CAAC,CAAD,CAAD,KAAS,QAAb,EAAuB;UAAA;;UACrB,MAAMb,IAAI,GAAGa,CAAH,aAAGA,CAAH,8BAAGA,CAAC,CAAG,CAAH,CAAJ,wCAAG,IAAS,CAAT,CAAb;;UACA,IAAIC,OAAO,CAACC,OAAR,CAAgBf,IAAhB,MAA0B,CAAC,CAA/B,EAAkC;YAChC,MAAM,IAAIgB,0CAAJ,CAAmChB,IAAnC,CAAN;UACD;QACF;;QACD,OAAOiB,OAAO,CAACL,GAAR,CAAY,GAAGC,CAAf,CAAP;MACD;;IAVgC,CAAd,CAArB;IAaAvB,MAAM,CAACC,gBAAP,CAAwBmB,OAAxB,EAAiC;MAC/BQ,GAAG,EAAE;QACHzB,KAAK,CAAC,GAAG0B,IAAJ,EAAa;UAChB,KAAKC,IAAL,CAAUD,IAAV;UACA,OAAO,IAAP;QACD;;MAJE,CAD0B;MAO/BE,MAAM,EAAE;QACN5B,KAAK,CAAC6B,CAAD,EAAY;UACf,KAAKC,MAAL,CAAYD,CAAZ,EAAe,CAAf;UACA,OAAO,IAAP;QACD;;MAJK,CAPuB;MAa/BE,IAAI,EAAE;QACJ,MAAM/B,KAAN,GAAc;UACZ;UACA,MAAMgC,OAAO,GAAGf,OAAO,CAACgB,GAAR,CAAY,CAAC,CAACC,CAAD,EAAI,GAAGd,CAAP,CAAD,EAAiBS,CAAjB,KAA4B;YACtD,IAAI;cACF,MAAMnB,MAAM,GAAG,IAAIC,cAAJ,CAAWK,GAAG,CAACxB,IAAf,EAAqB,EAClC,GAAGwB,GAAG,CAACX,aAAJ,CAAkB6B,CAAlB,CAD+B;gBAElC3B,IAAI,EAAE2B;cAF4B,CAArB,CAAf;cAIA,OAAOxB,MAAM,CAACyB,UAAP,CAAkB,GAAGf,CAArB,CAAP;YACD,CAND,CAME,OAAOgB,GAAP,EAAY;cACZ,MAAM,IAAIC,mCAAJ,CAA4BR,CAA5B,EAAgCO,GAAD,CAAeE,OAA9C,CAAN;YACD;UACF,CAVe,CAAhB;UAYA,MAAMC,QAAQ,GAAG,MAAM,IAAAC,cAAA,EAAM;YAC3B9B,MAAM,EAAE,MADmB;YAE3B+B,OAAO,EAAE;cAAE,gBAAgB;YAAlB,CAFkB;YAG3BC,IAAI,EAAEV,OAHqB;YAI3BvC,GAAG,EAAEuB,GAAG,CAAC,CAACxB,IAAL,CAAUC,GAJY;YAK3BkD,SAAS,EAAE3B,GAAG,CAAC,CAACxB,IAAL,CAAUmD,SALM;YAM3BC,UAAU,EAAE5B,GAAG,CAAC,CAACxB,IAAL,CAAUoD,UANK;YAO3BjD,OAAO,EAAEqB,GAAG,CAAC,CAACzB,MAAL,CAAYI;UAPM,CAAN,CAAvB;UAUA,OAAO4C,QAAQ,CAACG,IAAT,CAAcT,GAAd,CAAkB,CAACY,GAAD,EAAWhB,CAAX,KAAyB;YAAA;;YAChD,IAAIgB,GAAG,CAACC,EAAJ,KAAWd,OAAO,CAACH,CAAD,CAAP,CAAWiB,EAA1B,EAA8B;cAC5B,OAAO,IAAIC,wCAAJ,CAAiClB,CAAjC,EAAoCG,OAAO,CAACH,CAAD,CAAP,CAAWiB,EAA/C,EAAmDD,GAAG,CAACC,EAAvD,CAAP;YACD;;YACD,0DACE,0BAAA9B,GAAG,CAACX,aAAJ,CAAkBY,OAAO,CAACY,CAAD,CAAP,CAAW,CAAX,CAAlB,GAAiCmB,gBADnC,2DACE,oDAAoDH,GAAG,CAACI,MAAxD,CADF,yEAEEJ,GAAG,CAACI,MAFN;UAID,CARM,CAAP;QASD;;MAlCG;IAbyB,CAAjC,EAjBG,CAmEH;;IACAlC,MAAM,CAACT,OAAP,CAAgBc,CAAD,IAAYH,OAAO,CAACU,IAAR,CAAaP,CAAb,CAA3B;IAEA,OAAOH,OAAP;EAKD,CAnFwB;AAjEM"}